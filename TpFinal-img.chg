"19:43:19, 20 April 2021: Compressed sources"!

"Ensure all structures have calculated size to avoid recompilation messages later"
ExternalStructure allSubclasses do: [:e | e ensureDefined]!

SessionManager current bootFinished!

DevelopmentSessionManager installNew!

SessionManager current defaultResourceLibrary loadFlags: 0.
SessionManager current stashBootInfo!

"Mark all the booted packages as base"
Package manager markAllPackagesAsBase!

"Save the booted image"
| devsesh |
SourceManager default flushChanges.
devsesh := SessionManager current.
devsesh onPreSaveImage.
[devsesh primSnapshot: devsesh imageFileName
	backup: false
	type: 0
	maxObjects: 24576*1024
] ensure: [devsesh onPostSaveImage]!

"Remove unnecessary .chg files"
File delete: 'DBOOT.chg'!

SessionManager current onExit; primQuit: 0!

"19:44:01, 20 April 2021: Dolphin Smalltalk Professional started"!

"19:44:19, 20 April 2021: Dolphin Smalltalk Professional started"!

"16:27:25, 24 April 2021: Dolphin Smalltalk Professional started"!

2 factorial negated!

2 factorial negated!

3 + 4 * 6 + 3.!

5 between:1 and:3 squared + 4.!

5 between:1 and:3 squared + 4.!

5 between:8 and:10.!

13 between:1 and:3 squared + 4.!

14 between:1 and:3 squared + 4.!

"17:27:51, 24 April 2021: Image saved"!
"21:01:52, 01 May 2021: Dolphin Smalltalk Professional started"!

5 between:8 and:10.!

Object subclass: #Punto
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Punto guid: (GUID fromString: '{9d249ff6-180d-4c28-a58c-64c388f49ca3}')!
Punto comment: ''!
!Punto categoriesForClass!Kernel-Objects! !
Object subclass: #Punto
	instanceVariableNames: 'posX posY'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Punto methodsFor!
verX
	^posX! !
!Punto categoriesFor: #verX!public! !

!Punto methodsFor!
verY
	^posY! !
!Punto categoriesFor: #verY!public! !

"21:14:31, 01 May 2021: Image saved"!

!Punto class methodsFor!
crearPunto: unPunto posX:x posY:y ! !
!Punto class categoriesFor: #crearPunto:posX:posY:!public! !

!Punto class methodsFor!
crearPunto: unPunto posX: x posY: y ! !
!Punto class categoriesFor: #crearPunto:posX:posY:!public! !

!Punto class methodsFor!
crearPunto: unPunto posX:x posY:y ! !
!Punto class categoriesFor: #crearPunto:posX:posY:!public! !

!Punto class methodsFor!
posX:x posY:y 




text: aString yes: yesPath no: noPath
	"Answer an instance of the receiver (a Question) having aString as it's text and
	leading to the nodes at yesPath and noPath as the result of those answers to its
	question."

	^self new text: aString yes: yesPath no: noPath! !
!Punto class categoriesFor: #posX:posY:text:yes:no:!public! !

!Punto class methodsFor!
posX: x posY:y 




text: aString yes: yesPath no: noPath
	"Answer an instance of the receiver (a Question) having aString as it's text and
	leading to the nodes at yesPath and noPath as the result of those answers to its
	question."

	^self new text: aString yes: yesPath no: noPath! !
!Punto class categoriesFor: #posX:posY:text:yes:no:!public! !

!Punto class methodsFor!
posX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #posX:posY:!public! !

!Punto class methodsFor!
posX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #posX:posY:!public! !

!Punto class methodsFor!
posX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #posX:posY:!public! !

Punto class removeSelector: #crearPunto:posX:posY: ifAbsent: []!

Punto class removeSelector: #posX:posY:text:yes:no: ifAbsent: []!

!Punto class methodsFor!
posX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #posX:posY:!public! !

!Punto class methodsFor!
posX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #posX:posY:!public! !

!Punto class methodsFor!
posX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #posX:posY:!public! !

"21:31:19, 01 May 2021: Image saved"!

|punto|
punto:= Punto posX: 2 posY: 5

!

|punto|
punto:= Punto posX:2 posY:5!

punto:= Punto posX:2 posY:5

punto.verX!

punto verX!

punto:= Punto posX:2 posY:5

punto verX!

|punto|
punto:= Punto posX:2 posY:5

punto verX!

|punto|
punto:= Punto posX:2 posY:5

punto verX!

!Punto class methodsFor!
crearPuntoposX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #crearPuntoposX:posY:!public! !

!Punto class methodsFor!
crearPuntoposX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #crearPuntoposX:posY:!public! !

!Punto class methodsFor!
crearPuntoposX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #crearPuntoposX:posY:!public! !

|punto|
punto:= Punto crearPuntoposX: 2 posY: 5

punto verX!

!Punto class methodsFor!
posX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #posX:posY:!public! !

Punto class removeSelector: #crearPuntoposX:posY: ifAbsent: []!

!Punto class methodsFor!
posX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #posX:posY:!public! !

!Punto methodsFor!
posX: x posY:y 

	^self new posX:x posY:y! !
!Punto categoriesFor: #posX:posY:!public! !

!Punto methodsFor!
posX: x posY:y 

	posX :=x.
	posY := y.

! !
!Punto categoriesFor: #posX:posY:!public! !

!Punto methodsFor!
posX: x posY:y 

	posX :=x.
	posY := y.

! !
!Punto categoriesFor: #posX:posY:!public! !

punto:= Punto crearPuntoposX: 2 posY: 5

punto verX!

|punto|
punto:= Punto crearPuntoposX: 2 posY: 5

punto verX

!

|punto|
punto:= Punto posX: 2 posY: 5!

|punto|
punto:= Punto posX: 2 posY: 5

punto 

!

|punto|
punto:= Punto posX: 2 posY: 5!

punto:= Punto posX: 2 posY: 5!

punto verX.!

punto verX verY.!

punto:= Punto posX: 2 posY: 5

punto verX verY.!


punto:= Punto posX: 2 posY: 5

punto verX.
!

punto verX!

punto verX verY.!

punto verX!

punto posX!

punto:= Punto posX: 2 posY: 5

punto verX.
punto verY.
!

punto verX.
punto verY.
!


punto verX.
punto verY.
!

punto verY.!

punto verX.!


punto verX.
punto verY.!

punto:= Punto posX: 2 posY: 5

punto verX.
punto verY.
!

punto verX.
punto verY.!

!Punto class methodsFor!
crearPuntoposX: x posY:y 

	^self new posX:x posY:y



! !
!Punto class categoriesFor: #crearPuntoposX:posY:!public! !

Punto class removeSelector: #posX:posY: ifAbsent: []!

!Punto methodsFor!
crearPuntoposX: x posY:y 


	posX :=x.
	posY := y.

! !
!Punto categoriesFor: #crearPuntoposX:posY:!public! !

Punto removeSelector: #posX:posY: ifAbsent: []!

punto verX.
punto verY.!

!Punto methodsFor!
modX:x
posX:=x.! !
!Punto categoriesFor: #modX:!public! !

!Punto methodsFor!
modY:y
posY:=y.! !
!Punto categoriesFor: #modY:!public! !

punto verX.!

punto modX:4

punto verX.!


punto:= Punto crearPuntoposX: 2 posY: 5
punto modX:4

punto verX.
punto verY.!

punto:= Punto crearPuntoposX: 2 posY: 5!

punto verX.!

punto modX:4
!

punto modX:4 verX.!

punto modX:4 verX
!

punto modX:4.!

"21:48:50, 01 May 2021: Image saved"!

"21:48:57, 01 May 2021: Image saved"!

"14:22:28, 04 May 2021: Dolphin Smalltalk Professional started"!

punto:= Punto crearPuntoposX: 2 posY: 5
punto modX:4.

punto verX.!

punto:= Punto crearPuntoposX: 2 posY: 5
punto modX:4.!

punto:= Punto crearPuntoposX: 2 posY: 5.
!

punto verX.!

punto verX!

punto := Punto crearPuntoposX: 2 posY: 5.
punto modX:4.!

punto modX:4.
!

punto1 := Punto crearPuntoposX: 2 posY: 5.
!

punto1 verX.
!

punto verX.
!

punto verX
!

punto verX.!

punto verX.!

punto:= Punto crearPuntoposX: 2 posY: 5

punto verX.!

5 + 1!

punto:= Punto crearPuntoposX: 2 posY: 5
!

punto verX!

punto:= Punto crearPuntoposX: 2 posY: 5!

|punto|
punto:= Punto crearPuntoposX: 2 posY: 5

punto verX!

punto verX
!

punto verX inspect!

punto :=Punto crearPuntoposX: 2 posY: 3

punto verX!

punto:=Punto crearPuntoposX: 2 posY: 3

punto verX!

punto:=Punto crearPuntoposX:2 posY:3

punto verX!

punto verX.!

punto:=Punto crearPuntoposX:2 posY:3.

punto verX.!

"14:33:01, 04 May 2021: Dolphin Smalltalk Professional started"!

punto := Punto crearPuntoposX: 2 posY: 5

punto verX!

punto crearPuntoposX: 2 posY: 4!

punto verY.!

punto crearPuntoposX: 2 posY: 4
punto verY.
!


punto := Punto crearPuntoposX: 2 posY: 5

punto crearPuntoposX: 2 posY: 5
punto verY.
!

punto crearPuntoposX: 2 posY: 5.
punto verY.!

punto verY .!

punto crearPuntoposX: 2 posY: 5.
punto verY.
!

punto := Punto crearPuntoposX: 2 posY: 5.

punto crearPuntoposX: 2 posY: 5.
punto verY.
!

punto := Punto crearPuntoposX: 2 posY: 5.

punto crearPuntoposX: 2 posY: 5.
punto verY.
!

punto verY.!

punto crearPuntoposX: 2 posY: 5.
punto verY.!


punto:=Punto crearPuntoposX:2 posY:5.

punto crearPuntoposX: 2 posY: 5.
punto verY.
!

point:=Punto crearPuntoposX: 2 posY: 4!

!Punto class methodsFor!
crearPuntoposX: x posY:y 

	^(self new) posX:x posY:y



! !
!Punto class categoriesFor: #crearPuntoposX:posY:!public! !

!Punto methodsFor!
iniciarPuntoposX: x posY:y 


	posX :=x.
	posY := y.

! !
!Punto categoriesFor: #iniciarPuntoposX:posY:!public! !

Punto removeSelector: #crearPuntoposX:posY: ifAbsent: []!

!Punto class methodsFor!
crearPuntoposX: x posY:y 

	^(self new) iniciarPuntoposX: x posY: y



! !
!Punto class categoriesFor: #crearPuntoposX:posY:!public! !

point:=Punto crearPuntoposX: 2 posY: 4
!

punto verX
!

punto:=Punto crearPuntoposX: 2 posY: 4

punto verX!

punto:=Punto crearPuntoposX: 2 posY: 4

punto verX.!

punto=Punto crearPuntoposX: 2 posY: 4!

punto:=Punto crearPuntoposX: 2 posY: 4!


punto verX.!

punto verX.!

punto modX: 5!

punto verX.!

puntoA:=Punto crearPuntoposX: 2 posY: 4!

puntoA verY
!

puntoB:=Punto crearPuntoposX:12 posY: 14!

puntoB verX
!

puntoA verY
!

!

(((puntoB verX - puntoA  verX)squared)+((puntoB  verY -puntoA verY )squared))sqrt
!


((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt!

(puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared







!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt inspect!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt inspect!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt inspect
!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt
!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt inspect!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt inspect
!

"15:01:25, 04 May 2021: Image saved"!

"18:31:08, 04 May 2021: Dolphin Smalltalk Professional started"!

puntoA:=Punto crearPuntoposX: 2 posY: 4.

puntoB:=Punto crearPuntoposX:12 posY: 14.!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt inspect!

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2
! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2

^((x2 verX - x1 verX) squared+(y2  verY -y1 verY )squared)sqrt! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2

^((x2 verX - x1 verX) squared+(y2  verY -y1 verY )squared)sqrt! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2

^((x2 verX - x1 verX) squared+(y2  verY -y1 verY )squared)sqrt! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2

^((x2 verX - x1 verX) squared+(y2  verY -y1 verY )squared)sqrt! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2

^((x2 verX - x1 verX) squared+(y2  verY -y1 verY )squared)sqrt! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4 inspect!

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4!

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4 inspect
!

((puntoB verX - puntoA  verX) squared+(puntoB  verY -puntoA verY )squared)sqrt inspect
!

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4 inspect!

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2

^((x2 verX - x1 verX) squared+(y2  verY -y1 verY )squared)sqrt! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2

^((x2 verX - x1 verX) squared+(y2  verY -y1 verY )squared)sqrt! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

!Punto class methodsFor!
calcularDistanciaposx1:x1 posy1:y1 posx2:x2 posy2:y2

^((x2 verX - x1 verX) squared+(y2  verY -y1 verY )squared)sqrt! !
!Punto class categoriesFor: #calcularDistanciaposx1:posy1:posx2:posy2:!public! !

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4 inspect!

puntoA:=Punto crearPuntoposX: 2 posY: 4.

puntoB:=Punto crearPuntoposX:12 posY: 14!

puntoA:=Punto crearPuntoposX: 2 posY: 4.

puntoB:=Punto crearPuntoposX:12 posY: 14!

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4 inspect!

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4 !

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4 !

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4.!

Punto calcularDistanciaposx1: 12 posy1: 14 posx2: 2 posy2: 4.!

"18:57:47, 04 May 2021: Image saved"!

"19:57:21, 08 May 2021: Dolphin Smalltalk Professional started"!

Object subclass: #Biblioteca
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Biblioteca guid: (GUID fromString: '{857169ba-74f4-4f9f-b2f5-7eec22688842}')!
Biblioteca comment: ''!
!Biblioteca categoriesForClass!Kernel-Objects! !
!Biblioteca class methodsFor!
crearBiblioNombre:nombre! !
!Biblioteca class categoriesFor: #crearBiblioNombre:!public! !

Object subclass: #Biblioteca
	instanceVariableNames: 'nombre'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Biblioteca class methodsFor!
crearBiblioNombre:nombre

^(self new) iniciarBibliotecaNombre:nombre! !
!Biblioteca class categoriesFor: #crearBiblioNombre:!public! !

Biblioteca class removeSelector: #crearBiblioNombre: ifAbsent: []!

!Biblioteca class methodsFor!
crearBibliotecaNombre:nombre

^(self new) iniciarBibliotecaNombre:nombre! !
!Biblioteca class categoriesFor: #crearBibliotecaNombre:!public! !

!Biblioteca class methodsFor!
crearBibliotecaNombre:nombre

^(self new) iniciarBibliotecaNombre:nombre! !
!Biblioteca class categoriesFor: #crearBibliotecaNombre:!public! !

!Biblioteca methodsFor!
iniciarBibliotecaNombre


	
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre!public! !

!Biblioteca methodsFor!
iniciarBibliotecaNombre:nombre


nombre
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre:!public! !

!Biblioteca methodsFor!
iniciarBibliotecaNombre:nom


nombre
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre:!public! !

!Biblioteca methodsFor!
iniciarBibliotecaNombre:nom


nombre
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre:!public! !

!Biblioteca methodsFor!
iniciarBibliotecaNombre:nom


nombre
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre:!public! !

!Biblioteca methodsFor!
iniciarBibliotecaNombre:nom


nombre :=nom
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre:!public! !

!Biblioteca methodsFor!
iniciarBibliotecaNombre:nom


nombre :=nom.
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre:!public! !

Biblioteca removeSelector: #iniciarBibliotecaNombre ifAbsent: []!

!Biblioteca methodsFor!
verNombre

^nombre.! !
!Biblioteca categoriesFor: #verNombre!public! !

!Biblioteca methodsFor!
verNombre

^nombre! !
!Biblioteca categoriesFor: #verNombre!public! !

!Biblioteca methodsFor!
modificarNombre:nom
! !
!Biblioteca categoriesFor: #modificarNombre:!public! !

!Biblioteca methodsFor!
modificarNombre:nom
nombre:=nom
! !
!Biblioteca categoriesFor: #modificarNombre:!public! !

!Biblioteca methodsFor!
modificarNombre:nom
nombre:=nom
! !
!Biblioteca categoriesFor: #modificarNombre:!public! !

!Biblioteca methodsFor!
modificarNombre:nom
nombre:=nom
! !
!Biblioteca categoriesFor: #modificarNombre:!public! !

!Biblioteca methodsFor!
modificarNombre:nom
nombre:=nom
! !
!Biblioteca categoriesFor: #modificarNombre:!public! !

Object subclass: #Biblioteca
	instanceVariableNames: 'nombre libros'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Biblioteca methodsFor!
iniciarBibliotecaNombre:nom


nombre :=nom.
libros:= OrderedCollection new
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre:!public! !

!Biblioteca methodsFor!
agregarLibro:unLibro
"Agrega un libro a la Biblioteca"
libros add:unLibro.! !
!Biblioteca categoriesFor: #agregarLibro:!public! !

!Biblioteca methodsFor!
eliminarLibro:unLibro
"Elimina un libro de la Biblioteca"
libros remove:unLibro! !
!Biblioteca categoriesFor: #eliminarLibro:!public! !

!Biblioteca methodsFor!
existeLibro:unLibro
"Retorna V si el libro está en la Biblioteca, F en caso contrario(cc)"
^ libros includes:unLibro.! !
!Biblioteca categoriesFor: #existeLibro:!public! !

!Biblioteca methodsFor!
esVacia
"Retorna V si la Biblioteca no tiene libros, F en cc"
^ libros empty.! !
!Biblioteca categoriesFor: #esVacia!public! !

Behavior subclass: #Libro
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Libro guid: (GUID fromString: '{fbdaa2e4-3db5-430b-b9f7-2dc645cf816f}')!
Libro comment: ''!
!Libro categoriesForClass!Kernel-Classes! !
Behavior subclass: #Libro
	instanceVariableNames: 'isbn titulo autor editorial'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Behavior subclass: #Libro
	instanceVariableNames: 'isbn titulo autor editorial estado'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Behavior subclass: #Libro
	instanceVariableNames: 'isbn titulo autor editorial estado dni'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Libro methodsFor!
iniLibroIsbn:unIsbn tit:unTit aut:unAut edit:unaEdit
"Inicializa una instancia de Libro"
isbn:=unIsbn.
titulo:=unTit.
autor:=unAut.
editorial:=unaEdit.
estado:=false.
dni:=0.! !
!Libro categoriesFor: #iniLibroIsbn:tit:aut:edit:!public! !

!Libro class methodsFor!
crearLibroIsbn:unIsbn tit:unTit aut:unAut edit:unaEdit

^(self new) iniLibroIsbn:unIsbn tit:unTit aut:unAut edit:unaEdit.! !
!Libro class categoriesFor: #crearLibroIsbn:tit:aut:edit:!public! !

!Libro methodsFor!
iniLibroIsbn:unIsbn tit:unTit aut:unAut edit:unaEdit

isbn:=unIsbn.
titulo:=unTit.
autor:=unAut.
editorial:=unaEdit.
estado:=false.
dni:=0.! !
!Libro categoriesFor: #iniLibroIsbn:tit:aut:edit:!public! !

!Libro methodsFor!
iniLibroIsbn:unIsbn tit:unTit aut:unAut edit:unaEdit

isbn:=unIsbn.
titulo:=unTit.
autor:=unAut.
editorial:=unaEdit.
estado:=false.
dni:=0.! !
!Libro categoriesFor: #iniLibroIsbn:tit:aut:edit:!public! !

!Libro methodsFor!
verIsbn
^ isbn.! !
!Libro categoriesFor: #verIsbn!public! !

!Libro methodsFor!
verTitulo

^ titulo.! !
!Libro categoriesFor: #verTitulo!public! !

!Libro methodsFor!
 verAutor
^ autor.! !
!Libro categoriesFor: #verAutor!public! !

!Libro methodsFor!
verEditorial
^ editorial.! !
!Libro categoriesFor: #verEditorial!public! !

!Libro methodsFor!
verEditorial
^ editorial.! !
!Libro categoriesFor: #verEditorial!public! !

!Libro methodsFor!
verEstado
^ estado.! !
!Libro categoriesFor: #verEstado!public! !

!Libro methodsFor!
verDni
^ dni.! !
!Libro categoriesFor: #verDni!public! !

!Libro methodsFor!
verDni
^ dni.! !
!Libro categoriesFor: #verDni!public! !

!Libro methodsFor!
verDni
^ dni.! !
!Libro categoriesFor: #verDni!public! !

!Libro methodsFor!
 modificarIsbn:unIsbn
isbn:=unIsbn.! !
!Libro categoriesFor: #modificarIsbn:!public! !

!Libro methodsFor!
 modificarTit:unTit
titulo :=unTit.! !
!Libro categoriesFor: #modificarTit:!public! !

!Libro methodsFor!
modificarAutor:unAut

autor:=unAut.! !
!Libro categoriesFor: #modificarAutor:!public! !

!Libro methodsFor!
 modificarEditorial:unaEdit

editorial:=unaEdit.! !
!Libro categoriesFor: #modificarEditorial:!public! !

!Libro methodsFor!
modiEstado

estado:=estado not.! !
!Libro categoriesFor: #modiEstado!public! !

!Libro methodsFor!
modiEstado
estado:=estado not.! !
!Libro categoriesFor: #modiEstado!public! !

!Libro methodsFor!
modificarEstado
estado:=estado not.! !
!Libro categoriesFor: #modificarEstado!public! !

!Libro methodsFor!
modificarDni:unDni
dni:=unDni.! !
!Libro categoriesFor: #modificarDni:!public! !

!Libro methodsFor!
verAutor
^ autor.! !
!Libro categoriesFor: #verAutor!public! !

!Libro methodsFor!
verAutor
^ autor.! !
!Libro categoriesFor: #verAutor!public! !

!Libro methodsFor!
verAutor
^ autor.! !
!Libro categoriesFor: #verAutor!public! !

ClassBuilder  moveClass: Libro toSuperclass: Object!

!Libro methodsFor!
verAutor
^ autor.! !
!Libro categoriesFor: #verAutor!public! !

"20:22:11, 08 May 2021: Image saved"!

"20:22:21, 08 May 2021: Image saved"!

"20:23:17, 09 May 2021: Dolphin Smalltalk Professional started"!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

^libros find: unIsbn! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i)) ifTrue:[ ^(libros at:i)] ].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn = unIsbn ) ifTrue:[ ^(libros at:i)] ].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn = unIsbn ) ifTrue:[ ^(libros at:i)] ].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn = unIsbn ) ifTrue:[ ^(libros at:i)] ].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
iniciarBibliotecaNombre:nom

nombre :=nom.
libros:= OrderedCollection new
! !
!Biblioteca categoriesFor: #iniciarBibliotecaNombre:!public! !

b:=Biblioteca crearBibliotecaNombre:'hola'.
!


b verNombre inspect
!

b:=Biblioteca crearBibliotecaNombre:'hola'.

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'!

b buscarLibroIsbn: 1 inspect!

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'!

b:=Biblioteca crearBibliotecaNombre:'hola'.!

book:=b buscarLibroIsbn:1.!

book:=b buscarLibroIsbn:1 inspect .!

book:=b buscarLibroIsbn:2 inspect .!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn = unIsbn ) ifTrue:[ ^(libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

book:=b buscarLibroIsbn:2 inspect .!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn = unIsbn ) ifTrue:[ ^(libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

book:=b buscarLibroIsbn:1.!

book:=b buscarLibroIsbn:1.!

book:=b buscarLibroIsbn:2.!

book:=b buscarLibroIsbn:2.!

book:=b buscarLibroIsbn:2.!

book2:=b buscarLibroIsbn:2.!

book2:=b buscarLibroIsbn:2.!

book2:=b buscarLibroIsbn:2.

book2 verNombre inspect.!

book2 verNombre inspect.!

book2:=b buscarLibroIsbn:2.!

book:=b buscarLibroIsbn:1.!

book2:=b buscarLibroIsbn:2.!

book2:=b buscarLibroIsbn:2.
!


book2:=b buscarLibroIsbn:2.!

book:=b buscarLibroIsbn:1.
!

book2:=b buscarLibroIsbn:2.
!

"20:43:00, 09 May 2021: Image saved"!

"20:43:03, 09 May 2021: Dolphin Smalltalk Professional started"!

b:=Biblioteca crearBibliotecaNombre:'hola'.!

book2:=b buscarLibroIsbn:2.!

book2:=b buscarLibroIsbn:2.!

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'!

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'
!

book2:=b buscarLibroIsbn:2.
!

book2:=b buscarLibroIsbn:2.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) isbn=unIsbn ) ifTrue:[ ^(libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn =unIsbn ) ifTrue:[ ^(libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ ^(libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ ^(libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ ^(libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'!

book:=b buscarLibroIsbn:1.
!

book2:=b buscarLibroIsbn:2.!

book2:=b buscarLibroIsbn:3.!

book:=b buscarLibroIsbn:1.
!

book2:=b buscarLibroIsbn: 2.!

book2:=b buscarLibroIsbn: 1.
!

book2:=b buscarLibroIsbn: 1.
!

book2:=b buscarLibroIsbn: 1.
!

book2 verNombre!

book2:=b buscarLibroIsbn: 2.!

book2 verNombre!

book2:=b buscarLibroIsbn: 2.

book2 verNombre!

book2:=b buscarLibroIsbn: 1.

book2 verNombre!

book2:=b buscarLibroIsbn: 1.!

book2:=b buscarLibroIsbn: 1.
!

book2:=b buscarLibroIsbn: 1.!

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'

b agregarLibro: l.!

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'

b agregarLibro: l.

book2:=b buscarLibroIsbn: 1.
!

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'

b agregarLibro: l.

book2:=b buscarLibroIsbn: 1.
!

book2:=b buscarLibroIsbn: 1.
!

book2:=b buscarLibroIsbn: 2.!

bib:=Biblioteca crearBibliotecaNombre:'chau'.
!

bib:=Biblioteca crearBibliotecaNombre:'chau'.
!

bib:=Biblioteca crearBibliotecaNombre:'chau'.
!

bib:=Biblioteca crearBibliotecaNombre:'chau'.
!

book2:=b buscarLibroIsbn: 2.
!

b agregarLibro: l.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.

bib:=Biblioteca crearBibliotecaNombre:'chau'.

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'

b agregarLibro: l.
bib agregarLibro: l.

book2:=b buscarLibroIsbn: 2.!

b:=Biblioteca crearBibliotecaNombre:'hola'.

bib:=Biblioteca crearBibliotecaNombre:'chau'.

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'

b agregarLibro: l.
bib agregarLibro: l.

book2:=b buscarLibroIsbn: 2.!

book2 inspect.!

b buscarLibroIsbn: 2 inspect.!

b buscarLibroIsbn: 1 inspect.!

b buscarLibroIsbn: 2 inspect.!

b existeLibro: l inspect.
!

b agregarLibro: l.!

b existeLibro: l inspect.
!

b existeLibro: l inspect.
!


b existeLibro:l inspect.!

bib existeLibro:l inspect.!

b agregarLibro: l.
bib agregarLibro: l.!

bib agregarLibro: l.
!

bib agregarLibro: l.
!

b buscarLibroIsbn: 1 inspect.!

b buscarLibroIsbn: 1 inspect.
!


b buscarLibroIsbn: 2 inspect.!

b buscarLibroIsbn: 1 inspect.!

b:=Biblioteca crearBibliotecaNombre:'hola'.
l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'

b agregarLibro: l.

b buscarLibroIsbn: 1 inspect.!

b:=Biblioteca crearBibliotecaNombre:'hola'.
l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'

b agregarLibro: l.

b buscarLibroIsbn: 1 inspect.
!

l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'

b agregarLibro: l.

b buscarLibroIsbn: 1 inspect.!

b agregarLibro: l.

b buscarLibroIsbn: 1 inspect.
!

b agregarLibro: l.
!

b agregarLibro: l.
!

b buscarLibroIsbn: 1 inspect.
!

b buscarLibroIsbn: 1 inspect.
!

b buscarLibroIsbn: 1 inspect.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
l:=Libro crearLibroIsbn: 1 tit: 'titulo' aut: 'autor' edit: 'editorial'.

b agregarLibro: l.

b buscarLibroIsbn: 1 inspect.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
l:=Libro crearLibroIsbn:1 tit: 'titulo' aut: 'autor' edit: 'editorial'.

b agregarLibro: l.

b buscarLibroIsbn: 1 inspect.!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:1 tit: 'titulo' aut: 'autor' edit: 'editorial'.!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:1 tit: 'titulo' aut: 'autor' edit: 'editorial'.

b agregarLibro: libro.

b buscarLibroIsbn: 1 inspect.
!

b buscarLibroIsbn: 1 inspect.
!

b buscarLibroIsbn:1.!

b buscarLibroIsbn:1.
!

b buscarLibroIsbn:2.!

b buscarLibroIsbn:1.
!

"22:30:27, 09 May 2021: Image saved"!

"22:31:04, 09 May 2021: Dolphin Smalltalk Professional started"!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:1 tit: 'titulo' aut: 'autor' edit: 'editorial'.

b agregarLibro: libro.

b buscarLibroIsbn:1.!

b buscarLibroIsbn:2.!

b buscarLibroIsbn:1.!

!Biblioteca methodsFor!
todosLosLibros

^libros.! !
!Biblioteca categoriesFor: #todosLosLibros!public! !

lista:=b todosLosLibros inspect.
!

librob:=Libro crearLibroIsbn:4 tit: 'titulob' aut: 'autorb' edit: 'editorialb'.
!

b agregarLibro: librob .!

b agregarLibro: librob .
!


lista:=b todosLosLibros inspect.!

b agregarLibro: librob .
!

lista:=b todosLosLibros inspect.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'aut235or' edit: 'edit235orial'.


b agregarLibro: libro.!

lista:=b todosLosLibros inspect.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:22 tit: 'titulo235' aut: 'aut235or' edit: 'edit235orial'.
b agregarLibro: libro.
b buscarLibroIsbn:1.
lista:=b todosLosLibros inspect.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:22 tit: 'titulo235' aut: 'aut235or' edit: 'edit235orial'.
librob:=Libro crearLibroIsbn:22 tit: 'titulo235' aut: 'aut235or' edit: 'edit235orial'.
b agregarLibro: libro.
b agregarLibro: librob.

lista:=b todosLosLibros inspect.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:22 tit: 'titulo235' aut: 'aut235or' edit: 'edit235orial'.
librob:=Libro crearLibroIsbn:22 tit: 'titulo235' aut: 'aut235or' edit: 'edit235orial'.
b agregarLibro: libro.
b agregarLibro: librob.

lista:=b todosLosLibros inspect.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:22 tit: 'titulo25' aut: 'aut25or' edit: 'edit25orial'.
librob:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'aut235or' edit: 'edit235orial'.
b agregarLibro: libro.
b agregarLibro: librob.

lista:=b todosLosLibros inspect.

!

encuentra:=1 to: lista size do:[:i|((lista at:i) verEstado=false) ifTrue:[^(lista at:i)] ifFalse:[^nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verEstado=false) ifTrue:[(lista at:i) buscarLibroIsbn:(lista at:i) verIsbn] ifFalse:[^nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verEstado=false) ifTrue:[(lista at:i) buscarLibroIsbn:(lista at:i) verIsbn] ifFalse:[^nil]].
!

encuentra verIsbn
!


encuentra:=1 to: lista size do:[:i|((lista at:i) verEstado=false) ifTrue:[(lista at:i) buscarLibroIsbn:(lista at:i) verIsbn] ifFalse:[^nil]].

encuentra verIsbn.!

encuentra:=1 to: lista size do:[:i|((lista at:i) verEstado=false) ifTrue:[(lista at:i) verTitulo ] ifFalse:[^nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verEstado=false) ifTrue:[(lista at:i) verTitulo ] ifFalse:[^nil]].

encuentra inspect.!

lista:=b todosLosLibros inspect.
!

lista:=b todosLosLibros inspect.
!

b agregarLibro: librob.!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) ]  ifFalse:[^nil]].
!

encuentra inspect.
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verAutor ]  ifFalse:[^nil]].
!

lista:=b todosLosLibros.
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verAutor ]  ifFalse:[^nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verAutor ]  ifFalse:[^nil]].
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:22 tit: 'titulo25' aut: 'aut25or' edit: 'edit25orial'.
librob:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'aut235or' edit: 'edit235orial'.
b agregarLibro: libro.
b agregarLibro: librob.

lista:=b todosLosLibros.!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verAutor ]  ifFalse:[^nil]].
!

lista:=b todosLosLibros.
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verAutor ]  ifFalse:[^nil]].
!

lista:=b todosLosLibros.
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verIsbn ]  ifFalse:[^nil]].
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:22 tit: 'titulo22' aut: 'autor22' edit: 'editorial22'.
librob:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.
b agregarLibro: libro.
b agregarLibro: librob.

lista:=b todosLosLibros.!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verIsbn ]  ifFalse:[^nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verIsbn ]  ifFalse:[nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verIsbn ]  ifFalse:[nil]].
!

encuentra inspect.
!


encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verIsbn ]  ifFalse:[nil]].

encuentra inspect.!

encuentra inspect.
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libro:=Libro crearLibroIsbn:22 tit: 'titulo22' aut: 'autor22' edit: 'editorial22'.
librob:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.
b agregarLibro: libro.
b agregarLibro: librob.

lista:=b todosLosLibros.

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verIsbn ]  ifFalse:[nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[(lista at:i) verIsbn ]  ifFalse:[nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[(lista at:i) verIsbn ]  ifFalse:[nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verIsbn ]  ifFalse:[^nil]].
!

b buscarLibroIsbn:1.!

b buscarLibroIsbn:22.!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) ifTrue:[^(lista at:i) verIsbn ]  ifFalse:[^nil]].
!


encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].
!

b:=Biblioteca crearBibliotecaNombre:'hola'.
librob:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.
libro:=Libro crearLibroIsbn:22 tit: 'titulo22' aut: 'autor22' edit: 'editorial22'.

b agregarLibro: libro.
b agregarLibro: librob.

lista:=b todosLosLibros.

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!


encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=true ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235 & (lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

lista:=b todosLosLibros.
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

lista size.!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

"23:01:15, 09 May 2021: Image saved"!

"17:14:13, 11 May 2021: Dolphin Smalltalk Professional started"!

b:=Biblioteca crearBibliotecaNombre:'hola'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.

b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.!

lista size.!

lista size.
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=11) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

encuentra:=1 to: 3 do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!


encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].!

lista:=b todosLosLibros.
!

b buscarLibroIsbn:235.!

b buscarLibroIsbn:10.!

b buscarLibroIsbn:10.!

libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.!

lista:=b todosLosLibros.
!

b buscarLibroIsbn:10.!

b buscarLibroIsbn:20.!

b buscarLibroIsbn:20.!

b buscarLibroIsbn:235.!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i) verIsbn ]  
ifFalse:[^nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)]  
ifFalse:[^nil]].
!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)]  
ifFalse:[^nil]].!

b agregarLibro: libroB.!

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.

b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.!

b buscarLibroIsbn:235.!


b buscarLibroIsbn:10.!


encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)]  
ifFalse:[^nil]].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.

b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.
!

b buscarLibroIsbn:10.!

b buscarLibroIsbn:235.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ ^(libros at:i)] ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

b buscarLibroIsbn:235.!

b buscarLibroIsbn:10.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

|libro|
libro:=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro:=(libros at:i)] ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

|libro|
libro:=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro:=(libros at:i)] ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ ^(libros at:i)] ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=10) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

b buscarLibroIsbn:10.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ ^(libros at:i)] ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

b buscarLibroIsbn:235.!

b buscarLibroIsbn:235.!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

encuentra:=1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].!

b buscarLibroIsbn:235.!

"15:54:16, 23 May 2021: Dolphin Smalltalk Professional started"!

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.

b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.

1 to: lista size do:[:i|((lista at:i) verIsbn=235) &((lista at:i) verEstado=false ) 
ifTrue:[^(lista at:i)] ].


b buscarLibroIsbn:235.!

b buscarLibroIsbn:235.!

lista:=b todosLosLibros.
!

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.


b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.!

lista:=b todosLosLibros.
!

lista:=b todosLosLibros.
!

b buscarLibroIsbn:235.!

b buscarLibroIsbn:10.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn
|libro|
libro=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ ^(libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn
|libro|
libro=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro= (libros at:i)]ifFalse:[^nil]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn
|libro|
libro=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro= (libros at:i)]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn
|libro|
libro=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro= (libros at:i)]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn
|libro|
libro=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro= (libros at:i)]. ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.


b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.!

lista:=b todosLosLibros.!


b buscarLibroIsbn:235.!

b buscarLibroIsbn:235.!

b buscarLibroIsbn:235.!

b buscarLibroIsbn:10.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn
|libro|
libro=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro= (libros at:i)]. ].

^libro.! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn
|libro|
libro=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro= (libros at:i)]. ].

^libro.! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn
|libro|
libro=nil.

1 to: libros size do:[:i|((libros at:i) verIsbn=unIsbn ) ifTrue:[ libro= (libros at:i)]. ].

^libro.! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.


b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.!

b buscarLibroIsbn:235.!

b buscarLibroIsbn:235.!

lista:=b todosLosLibros.
!


b buscarLibroIsbn:10.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

^ libros detect: [:libro | libro verIsbn=unIsbn ] ifNone:[^nil]! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

^ libros detect: [:libro | libro verIsbn=unIsbn ] ifNone:[^nil].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

^ libros detect: [:libro | libro verIsbn=unIsbn ] ifNone:[^nil].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

^ libros detect: [:libro | libro verIsbn=unIsbn ] ifNone:[^nil].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

b buscarLibroIsbn:235.!

b buscarLibroIsbn:10.!

b buscarLibroIsbn:12.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

^ libros detect: [:libro | libro verIsbn=unIsbn ] ! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

b buscarLibroIsbn:12.!

b buscarLibroIsbn:10.!

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

^ libros detect: [:libro | libro verIsbn=unIsbn ] ifNone:[^nil].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !

!Biblioteca methodsFor!
buscarLibroIsbn:unIsbn

^ libros detect: [:libro | libro verIsbn=unIsbn ] ifNone:[^nil].! !
!Biblioteca categoriesFor: #buscarLibroIsbn:!public! !


b buscarLibroIsbn:10.!

b buscarLibroIsbn:235.!

"16:04:42, 23 May 2021: Image saved"!

"16:04:47, 23 May 2021: Image saved"!

"16:05:35, 23 May 2021: Dolphin Smalltalk Professional started"!


d:=Dictionary new at:'gorrion' put:'pajaro';
at:'olmo' put:'arbol';
at:'golondrina' put:'pajaro';
at:'sauce' put:'arbol';
yourself.!

rta1:= d at:'golondrina'.!

rta2:=d at:'gorrion'.!

rta3:=d at:'pavo'.!

rta3:=d at:'pavo'.!

d at:'fuego' ifAbsent:['no lo se'].!

d removeKey:'fuego' ifAbsent:[^nil].!

rta3:=d at:'pavo'.!

"16:18:36, 23 May 2021: Image saved"!

"16:04:52, 01 June 2021: Dolphin Smalltalk Professional started"!

"16:06:47, 01 June 2021: Image saved"!

"15:19:06, 15 June 2021: Dolphin Smalltalk Professional started"!

"15:41:11, 15 June 2021: Image saved to 'C:\Users\Nuzzo\Desktop\TpFinal-img.img7'"!

"15:41:14, 15 June 2021: Image saved"!

"19:27:38, 15 June 2021: Dolphin Smalltalk Professional started"!

Object subclass: #Biblioteca
	instanceVariableNames: 'nombre libros direccion'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"19:27:53, 15 June 2021: Image saved"!

"19:27:58, 15 June 2021: Image saved"!

"19:30:01, 15 June 2021: Dolphin Smalltalk Professional started"!

Object subclass: #Biblioteca
	instanceVariableNames: 'nombre libros'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Mercaderia
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Mercaderia guid: (GUID fromString: '{30d0f5f9-072e-4883-8bd5-e17bbbb16da5}')!
Mercaderia comment: ''!
!Mercaderia categoriesForClass!Kernel-Objects! !
Object subclass: #Mercaderia
	instanceVariableNames: 'Id Nombre Descripcion Precio Imagen Tipo '
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Mercaderia class methodsFor!
crearMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo
! !
!Mercaderia class categoriesFor: #crearMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Imagen:=unaImagen.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Imagen:=unaImagen.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

"19:47:12, 15 June 2021: Image saved"!

Mercaderia subclass: #Comida
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Comida guid: (GUID fromString: '{403a92d4-9378-42f9-a6f5-9fafcf63862a}')!
Comida comment: ''!
!Comida categoriesForClass!Kernel-Objects! !
Mercaderia subclass: #Bebida
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Bebida guid: (GUID fromString: '{3e7089a5-8078-4a0e-a161-61c9bedbaadd}')!
Bebida comment: ''!
!Bebida categoriesForClass!Kernel-Objects! !
Mercaderia subclass: #Bebida
	instanceVariableNames: 'Mililitros'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Mercaderia subclass: #Comida
	instanceVariableNames: 'TipoComida'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Mercaderia subclass: #Comida
	instanceVariableNames: 'TipoComida'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Mercaderia subclass: #Comida
	instanceVariableNames: 'TipoComida'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"20:00:41, 15 June 2021: Image saved"!

"20:00:43, 15 June 2021: Image saved"!

"19:13:18, 22 June 2021: Dolphin Smalltalk Professional started"!

"21:55:10, 22 June 2021: Image saved"!
"18:50:09, 23 June 2021: Dolphin Smalltalk Professional started"!

Object subclass: #Negocio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Negocio guid: (GUID fromString: '{e714b91b-ecc1-4e63-8d75-375a9300ae72}')!
Negocio comment: ''!
!Negocio categoriesForClass!Kernel-Objects! !
!Negocio methodsFor!
CobrarPedido
! !
!Negocio categoriesFor: #CobrarPedido!public! !

!Negocio methodsFor!
ObtenerMercaderias
! !
!Negocio categoriesFor: #ObtenerMercaderias!public! !

!Negocio methodsFor!
ActualizarRecaudacion! !
!Negocio categoriesFor: #ActualizarRecaudacion!public! !

!Negocio methodsFor!
GuardarPedido! !
!Negocio categoriesFor: #GuardarPedido!public! !

!Negocio methodsFor!
GuardarPedido! !
!Negocio categoriesFor: #GuardarPedido!public! !

!Negocio methodsFor!
GuardarPedido! !
!Negocio categoriesFor: #GuardarPedido!public! !

!Negocio methodsFor!
iniciarNegocio! !
!Negocio categoriesFor: #iniciarNegocio!public! !

!Negocio class methodsFor!
crearNegocio! !
!Negocio class categoriesFor: #crearNegocio!public! !

!Negocio methodsFor!
cobrarPedido
! !
!Negocio categoriesFor: #cobrarPedido!public! !

Negocio removeSelector: #CobrarPedido ifAbsent: []!

!Negocio methodsFor!
guardarPedido! !
!Negocio categoriesFor: #guardarPedido!public! !

Negocio removeSelector: #GuardarPedido ifAbsent: []!

!Negocio methodsFor!
obtenerMercaderias
! !
!Negocio categoriesFor: #obtenerMercaderias!public! !

Negocio removeSelector: #ObtenerMercaderias ifAbsent: []!

!Negocio methodsFor!
actualizarRecaudacion! !
!Negocio categoriesFor: #actualizarRecaudacion!public! !

Negocio removeSelector: #ActualizarRecaudacion ifAbsent: []!

Object subclass: #Negocio
	instanceVariableNames: 'Nombre Direccion Telefono Menu Recaudacion Pedidos'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Negocio
	instanceVariableNames: 'Nombre Direccion Telefono Menu Recaudacion Pedidos'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Negocio
	instanceVariableNames: 'Nombre Direccion Telefono Menu Recaudacion Pedidos'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Pedido
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!
Pedido guid: (GUID fromString: '{377fd478-56cb-477b-823d-1457f05bda5e}')!
Pedido comment: ''!
!Pedido categoriesForClass!Kernel-Objects! !
!Pedido methodsFor!
iniciarPedido! !
!Pedido categoriesFor: #iniciarPedido!public! !

!Pedido class methodsFor!
crearPedido! !
!Pedido class categoriesFor: #crearPedido!public! !

Object subclass: #Pedido
	instanceVariableNames: 'Numero Mercaderias Fecha Hora PrecioTotal'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Pedido
	instanceVariableNames: 'Numero Mercaderias Fecha Hora PrecioTotal'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Negocio class methodsFor!
crearNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion! !
!Negocio class categoriesFor: #crearNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio class methodsFor!
crearNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion! !
!Negocio class categoriesFor: #crearNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

Negocio class removeSelector: #crearNegocio ifAbsent: []!

!Negocio class methodsFor!
crearNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

^(self new) iniciarNegocioNombre:nombre! !
!Negocio class categoriesFor: #crearNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio class methodsFor!
crearNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

^(self new) iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion.! !
!Negocio class categoriesFor: #crearNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio class methodsFor!
crearNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

^(self new) iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion.! !
!Negocio class categoriesFor: #crearNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

Negocio removeSelector: #iniciarNegocioNombre:Direccion: ifAbsent: []!

Negocio removeSelector: #iniciarNegocio ifAbsent: []!

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=menu.
Recaudacion:=recaudacion.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=menu.
Recaudacion:=recaudacion.
Pedidos:=OrderedCollection new.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=menu.
Recaudacion:=recaudacion.
Pedidos:=OrderedCollection new.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=menu.
Recaudacion:=recaudacion.
Pedidos:=OrderedCollection new.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=menu.
Recaudacion:=recaudacion.
Pedidos:=OrderedCollection new.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu Recaudacion:recaudacion

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=menu.
Recaudacion:=recaudacion.
Pedidos:=OrderedCollection new.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Imagen:=unaImagen.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio imagen:unaImagen tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Imagen:=unaImagen.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

Pedido removeSelector: #iniciarPedido ifAbsent: []!

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

Pedido class removeSelector: #crearPedido ifAbsent: []!

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal.! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal.! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=fecha.
Hora:=hora.
PrecioTotal:=preciototal.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=fecha.
Hora:=hora.
PrecioTotal:=preciototal.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

"19:13:50, 23 June 2021: Image saved"!

"19:13:52, 23 June 2021: Image saved"!

"19:16:19, 23 June 2021: Dolphin Smalltalk Professional started"!

Object subclass: #Mercaderia
	instanceVariableNames: 'Id Nombre Descripcion Precio Tipo'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Mercaderia class methodsFor!
crearMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo
! !
!Mercaderia class categoriesFor: #crearMercaderiaId:nombre:descripcion:precio:tipo:!public! !

Mercaderia class removeSelector: #crearMercaderiaId:nombre:descripcion:precio:imagen:tipo: ifAbsent: []!

!Mercaderia class methodsFor!
crearMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo.
! !
!Mercaderia class categoriesFor: #crearMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:!public! !

Mercaderia removeSelector: #iniciarMercaderiaId:nombre:descripcion:precio:imagen:tipo: ifAbsent: []!

!Negocio class methodsFor!
crearNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu

^(self new) iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu.! !
!Negocio class categoriesFor: #crearNegocioNombre:Direccion:Telefono:Menu:!public! !

!Negocio class methodsFor!
crearNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu

^(self new) iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu.! !
!Negocio class categoriesFor: #crearNegocioNombre:Direccion:Telefono:Menu:!public! !

Negocio class removeSelector: #crearNegocioNombre:Direccion:Telefono:Menu:Recaudacion: ifAbsent: []!

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono Menu:menu

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=menu.
Recaudacion:=0.
Pedidos:=OrderedCollection new.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:Menu:!public! !

Negocio removeSelector: #iniciarNegocioNombre:Direccion:Telefono:Menu:Recaudacion: ifAbsent: []!

Object subclass: #Negocio
	instanceVariableNames: 'Nombre Direccion Telefono Menu Recaudacion Pedidos'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Negocio
	instanceVariableNames: 'Nombre Direccion Telefono Menu Recaudacion Pedidos'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Negocio methodsFor!
obtenerRecaudacion

^Recaudacion.! !
!Negocio categoriesFor: #obtenerRecaudacion!public! !

!Negocio methodsFor!
obtenerMercaderias

^Menu.! !
!Negocio categoriesFor: #obtenerMercaderias!public! !

!Negocio methodsFor!
obtenerMercaderias

^Menu.! !
!Negocio categoriesFor: #obtenerMercaderias!public! !

!Negocio methodsFor!
obtenerRecaudacion

^Recaudacion.! !
!Negocio categoriesFor: #obtenerRecaudacion!public! !

!Negocio methodsFor!
obtenerPedidos

^Pedidos.! !
!Negocio categoriesFor: #obtenerPedidos!public! !

!Bebida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo Mililitros:mililitros

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo.! !
!Bebida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:tipo:Mililitros:!public! !

!Bebida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo Mililitros:mililitros

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo mililitros:mililitros.! !
!Bebida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:tipo:Mililitros:!public! !

!Bebida methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo mililitros:mililitros! !
!Bebida categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:mililitros:!public! !

!Bebida methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo mililitros:mililitros

! !
!Bebida categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:mililitros:!public! !

!Bebida methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo mililitros:mililitros

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:mililitros:!public! !

!Bebida methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo mililitros:mililitros

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:mililitros:!public! !

!Bebida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo Mililitros:mililitros

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo mililitros:mililitros.! !
!Bebida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:tipo:Mililitros:!public! !

!Comida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo TipoComida:tipoComida

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo TipoComida:tipoComida.! !
!Comida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:tipo:TipoComida:!public! !

!Comida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo TipoComida:tipoComida

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo TipoComida:tipoComida.! !
!Comida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:tipo:TipoComida:!public! !

!Comida methodsFor!
 iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo TipoComida:tipoComida! !
!Comida categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:TipoComida:!public! !

!Comida methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo TipoComida:tipoComida

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.
TipoComida=tipoComida.! !
!Comida categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:TipoComida:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia class methodsFor!
crearMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo
"No necesario, utilizar subclases"
^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo.
! !
!Mercaderia class categoriesFor: #crearMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia class methodsFor!
crearMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo
"No necesario, utilizar subclases"
"^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo."
! !
!Mercaderia class categoriesFor: #crearMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo
"No necesario, utilizar subclases"
"Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo."! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Bebida methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Bebida'.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:mililitros:!public! !

Bebida removeSelector: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:mililitros: ifAbsent: []!

!Bebida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Mililitros:mililitros

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros.! !
!Bebida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:Mililitros:!public! !

!Bebida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Mililitros:mililitros

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros.! !
!Bebida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:Mililitros:!public! !

Bebida class removeSelector: #crearBebidaId:nombre:descripcion:precio:tipo:Mililitros: ifAbsent: []!

!Comida methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
TipoComida=tipoComida.! !
!Comida categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:TipoComida:!public! !

Comida removeSelector: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:TipoComida: ifAbsent: []!

!Comida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida.! !
!Comida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:TipoComida:!public! !

Comida class removeSelector: #crearBebidaId:nombre:descripcion:precio:tipo:TipoComida: ifAbsent: []!

"19:40:23, 23 June 2021: Image saved"!

menu:=OrderedCollection new.
!

|menu mercaderia1 mercaderia2 mercaderia3|

"Creacion de mercaderias"
mercaderia1:=Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

| mercaderia1 mercaderia2 mercaderia3|

"Creacion de mercaderias"
mercaderia1:=Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

| mercaderia1 mercaderia2 |

"Creacion de mercaderias"
mercaderia1:=Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

| mercaderia1 mercaderia2 |

"Creacion de mercaderias"
mercaderia1:=Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

| mercaderia1 mercaderia2 |

"Creacion de mercaderias"
mercaderia1:=Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

| menu mercaderia1 mercaderia2 |

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:TipoComida:!public! !

Comida class removeSelector: #crearBebidaId:nombre:descripcion:precio:TipoComida: ifAbsent: []!

| menu mercaderia1 mercaderia2 negocio|

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
TipoComida=tipoComida.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:TipoComida:!public! !

Comida removeSelector: #iniciarMercaderiaId:nombre:descripcion:precio:TipoComida: ifAbsent: []!

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:TipoComida:!public! !

!Bebida class methodsFor!
crearBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Mililitros:mililitros

^(self new) iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros.! !
!Bebida class categoriesFor: #crearBebidaId:nombre:descripcion:precio:Mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Bebida'.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

Bebida removeSelector: #iniciarMercaderiaId:nombre:descripcion:precio:mililitros: ifAbsent: []!

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Bebida'.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Bebida'.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

| menu mercaderia1 mercaderia2 negocio|

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio|

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 1 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio|

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 1 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2 ; add: mercaderia3.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio|

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Creacion del menu de mercaderias del negocio"
menu:=OrderedCollection new.
menu add: mercaderia1 ; add: mercaderia2 ; add: mercaderia3.


negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212' Menu: menu.

negocio inspect.!

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.


b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.!

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=OrderedCollection new.
Recaudacion:=0.
Pedidos:=OrderedCollection new.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:!public! !

Negocio removeSelector: #iniciarNegocioNombre:Direccion:Telefono:Menu: ifAbsent: []!

!Negocio class methodsFor!
crearNegocioNombre:nombre Direccion:direccion Telefono:telefono

^(self new) iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono.! !
!Negocio class categoriesFor: #crearNegocioNombre:Direccion:Telefono:!public! !

Negocio class removeSelector: #crearNegocioNombre:Direccion:Telefono:Menu: ifAbsent: []!

!Negocio methodsFor!
agregarMercaderia:mercaderia

Menu add: mercaderia.! !
!Negocio categoriesFor: #agregarMercaderia:!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio|

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio|

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


negocio inspect.!

!Comida methodsFor!
mostrarMercaderia

^self.! !
!Comida categoriesFor: #mostrarMercaderia!public! !

mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia1 mostrarMercaderia.!

mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia1 inspect.
!

!

mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia1 inspect.!

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.


b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.!

b:=Biblioteca crearBibliotecaNombre:'bibliotecaA'.
libroB:=Libro crearLibroIsbn:10 tit: 'titulo10' aut: 'autor10' edit: 'editorial10'.
libroA:=Libro crearLibroIsbn:235 tit: 'titulo235' aut: 'autor235' edit: 'editorial235'.


b agregarLibro: libroA.
b agregarLibro: libroB.

lista:=b todosLosLibros.!

!Bebida methodsFor!
verNombre
! !
!Bebida categoriesFor: #verNombre!public! !

Bebida removeSelector: #verNombre ifAbsent: []!

!Mercaderia methodsFor!
verNombre

Nombre.! !
!Mercaderia categoriesFor: #verNombre!public! !

!Mercaderia methodsFor!
verNombre

^Nombre.! !
!Mercaderia categoriesFor: #verNombre!public! !

!Mercaderia methodsFor!
verId

^Id.! !
!Mercaderia categoriesFor: #verId!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Mercaderia crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

Mercaderia removeSelector: #verId ifAbsent: []!

Mercaderia removeSelector: #verNombre ifAbsent: []!

!Mercaderia class methodsFor!
verNombre

^self Nombre.! !
!Mercaderia class categoriesFor: #verNombre!public! !

!Mercaderia class methodsFor!
verNombre

^self Nombre.! !
!Mercaderia class categoriesFor: #verNombre!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Mercaderia crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas' inspect .
!

Mercaderia class removeSelector: #verNombre ifAbsent: []!

!Mercaderia methodsFor!
verNombreins

^Nombre.! !
!Mercaderia categoriesFor: #verNombreins!public! !

!Bebida methodsFor!
verNombre
super verNombreins.! !
!Bebida categoriesFor: #verNombre!public! !

!Bebida methodsFor!
verNombre
super verNombreins.! !
!Bebida categoriesFor: #verNombre!public! !

!Bebida methodsFor!
verNombre
super verNombreins.! !
!Bebida categoriesFor: #verNombre!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas' inspect .
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

Bebida removeSelector: #verNombre ifAbsent: []!

!Mercaderia methodsFor!
verNombre

^Nombre.! !
!Mercaderia categoriesFor: #verNombre!public! !

!Mercaderia methodsFor!
verNombre

^Nombre.! !
!Mercaderia categoriesFor: #verNombre!public! !

Mercaderia removeSelector: #verNombreins ifAbsent: []!

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas' inspect .
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

!Mercaderia methodsFor!
verId

^Id.! !
!Mercaderia categoriesFor: #verId!public! !

!Mercaderia methodsFor!
verDescripcion

^Descripcion.! !
!Mercaderia categoriesFor: #verDescripcion!public! !

!Mercaderia methodsFor!
verPrecio

^Precio.! !
!Mercaderia categoriesFor: #verPrecio!public! !

!Mercaderia methodsFor!
verTipo
^Tipo.! !
!Mercaderia categoriesFor: #verTipo!public! !

!Bebida methodsFor!
verMililitros
^Mililitros.! !
!Bebida categoriesFor: #verMililitros!public! !

Comida removeSelector: #mostrarMercaderia ifAbsent: []!

!Comida methodsFor!
verTipoComida! !
!Comida categoriesFor: #verTipoComida!public! !

!Comida methodsFor!
verTipoComida
^TipoComida.! !
!Comida categoriesFor: #verTipoComida!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas' inspect .
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
TipoComida=tipoComida.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:TipoComida:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
TipoComida=tipoComida.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:TipoComida:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:tipoComida

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
TipoComida=tipoComida.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:TipoComida:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Bebida'.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Bebida'.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Bebida'.
Mililitros:=mililitros.! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas' .
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.!

!Comida methodsFor!
verTipoComida

^TipoComida.! !
!Comida categoriesFor: #verTipoComida!public! !

!Comida methodsFor!
verTipoComida

^TipoComida.! !
!Comida categoriesFor: #verTipoComida!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas' .
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

!Comida methodsFor!
verTipoComida

^TipoComida! !
!Comida categoriesFor: #verTipoComida!public! !

!Comida methodsFor!
verTipoComida

^TipoComida.! !
!Comida categoriesFor: #verTipoComida!public! !

!Comida methodsFor!
verTipoComida

^TipoComida.! !
!Comida categoriesFor: #verTipoComida!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas' .
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 TipoComida: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 TipoComida: 'Pizzas'.
mercaderia1 inspect.!

Mercaderia subclass: #Comida
	instanceVariableNames: 'Categoria'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Mercaderia subclass: #Comida
	instanceVariableNames: 'Categoria'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Comida methodsFor!
verCategoria

^Categoria.! !
!Comida categoriesFor: #verCategoria!public! !

Comida removeSelector: #verTipoComida ifAbsent: []!

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:categoria

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
Categoria=categoria.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:Categoria:!public! !

Comida removeSelector: #iniciarComidaId:nombre:descripcion:precio:TipoComida: ifAbsent: []!

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:Categoria:!public! !

Comida class removeSelector: #crearComidaId:nombre:descripcion:precio:TipoComida: ifAbsent: []!

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:Categoria:!public! !

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio TipoComida:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:Categoria:!public! !

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:Categoria:!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 Categoria: 'Pizzas'.
mercaderia1 inspect.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 Categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

"20:29:43, 23 June 2021: Image saved"!

"20:29:48, 23 June 2021: Image saved"!

"20:30:19, 23 June 2021: Dolphin Smalltalk Professional started"!

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 Categoria: 'Pizzas'.
mercaderia1 inspect.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 Categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.!

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:categoria

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
Categoria=categoria.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

Comida removeSelector: #iniciarComidaId:nombre:descripcion:precio:Categoria: ifAbsent: []!

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:categoria

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
Categoria=categoria.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:categoria

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
Categoria=categoria.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:Categoria:!public! !

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:Categoria:!public! !

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio Categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:Categoria:!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 Categoria: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 Categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:categoria:!public! !

Comida class removeSelector: #crearComidaId:nombre:descripcion:precio:Categoria: ifAbsent: []!

!Comida class methodsFor!
crearComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

^(self new) iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria.! !
!Comida class categoriesFor: #crearComidaId:nombre:descripcion:precio:categoria:!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria: 'Pastas'.


"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria: 'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria:'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria:'Pastas'.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria:'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria:'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
Categoria=unaCategoria.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria:'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria:'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

!Negocio methodsFor!
verNombre
^Nombre.! !
!Negocio categoriesFor: #verNombre!public! !

!Negocio methodsFor!
verDireccion
^Direccion.! !
!Negocio categoriesFor: #verDireccion!public! !

!Negocio methodsFor!
verMenu

^Menu.! !
!Negocio categoriesFor: #verMenu!public! !

Negocio removeSelector: #obtenerMercaderias ifAbsent: []!

!Negocio methodsFor!
verPedidos

^Pedidos.! !
!Negocio categoriesFor: #verPedidos!public! !

Negocio removeSelector: #obtenerPedidos ifAbsent: []!

!Negocio methodsFor!
verRecaudacion

^Recaudacion.! !
!Negocio categoriesFor: #verRecaudacion!public! !

Negocio removeSelector: #obtenerRecaudacion ifAbsent: []!

!Negocio methodsFor!
verTelefono
^Telefono.! !
!Negocio categoriesFor: #verTelefono!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria:'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria:'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

"20:39:22, 23 June 2021: Image saved"!

"19:16:42, 29 June 2021: Dolphin Smalltalk Professional started"!

!Mercaderia class methodsFor!
crearMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo
"No necesario, utilizar subclases"
^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo.
! !
!Mercaderia class categoriesFor: #crearMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia class methodsFor!
crearMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo
"No necesario, utilizar subclases"
^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo.
! !
!Mercaderia class categoriesFor: #crearMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia class methodsFor!
crearMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

^(self new) iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo.
! !
!Mercaderia class categoriesFor: #crearMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Mercaderia methodsFor!
iniciarMercaderiaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio tipo:unTipo

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:=unTipo.! !
!Mercaderia categoriesFor: #iniciarMercaderiaId:nombre:descripcion:precio:tipo:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Bebida'.
Mililitros:=mililitros.

! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Mililitros:=mililitros.
super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Bebida'! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Mililitros:=mililitros.
super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Bebida'! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Mililitros:=mililitros.
super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Bebida'! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Mililitros:=mililitros.
super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Bebida'! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Bebida methodsFor!
iniciarBebidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio mililitros:mililitros

Mililitros:=mililitros.
super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Bebida'! !
!Bebida categoriesFor: #iniciarBebidaId:nombre:descripcion:precio:mililitros:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
Categoria=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Id:=unId.
Nombre :=unNombre.
Descripcion:=unaDescripcion.
Precio:=unPrecio.
Tipo:='Comida'.
Categoria=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Categoria=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Categoria=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Categoria=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Categoria=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria:'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria:'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

| menu mercaderia1 mercaderia2 mercaderia3 negocio |

"Creacion del negocio"
negocio:=Negocio crearNegocioNombre: 'FASTFOOD' Direccion: 'Av. San martin 1200' Telefono:'42569212'.

"Creacion de mercaderias"
mercaderia1:= Comida crearComidaId: 1 nombre: 'Pizza Mozzarella' descripcion: 'Pizza con queso mozzarella al horno' precio: 300 categoria:'Pizzas'.
mercaderia2:= Bebida crearBebidaId: 2 nombre: 'Cocacola' descripcion: 'Botella de cocacola pequeña' precio: 120 Mililitros: 600.
mercaderia3:= Comida crearComidaId: 3 nombre: 'Ravioles de ricota' descripcion: 'Ravioles de ricota con salsa filetto' precio: 400 categoria:'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

"19:23:37, 29 June 2021: Image saved"!

"19:26:05, 29 June 2021: Image saved"!

"11:47:40, 02 July 2021: Dolphin Smalltalk Professional started"!

"11:49:21, 02 July 2021: Image saved"!
"11:51:50, 02 July 2021: Dolphin Smalltalk Professional started"!

!Pedido methodsFor!
verPrecioTotal

PrecioTotal:=0.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

PrecioTotal:=0.

1 to:(Mercaderias size) do:[:i | Mercaderias at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

PrecioTotal:=0.

1 to:(Mercaderias size) do:[:i | Mercaderias at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

PrecioTotal:=0.

1 to:(Mercaderias size) do:[:i | i at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

PrecioTotal:=0.

1 to:(Mercaderias size) do:[:i | i at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

PrecioTotal:=0.

1 to:(Mercaderias size) do:[:i | i at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

PrecioTotal:=0.

1 to:(Mercaderias size) do:[:i | Mercaderias at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

PrecioTotal:=0.

1 to:(Mercaderias size) do:[:i | PrecioTotal:= Mercaderias at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal.! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal.! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal.! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias Fecha:fecha Hora:hora PrecioTotal:preciototal.! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal:!public! !

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:!public! !

!Pedido class methodsFor!
crearPedidoNumero:numero Mercaderias:mercaderias

^(self new) iniciarPedidoNumero:numero Mercaderias:mercaderias! !
!Pedido class categoriesFor: #crearPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=self verPrecioTotal.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=self verPrecioTotal.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

| mercaderia1 mercaderia2 mercaderia3 negocio |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

negocio inspect.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

pedido1:= Pedido crearPedidoNumero: 1 Mercaderias: negocio verMenu inspect.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

pedido1:= Pedido crearPedidoNumero: 1 Mercaderias: negocio verMenu.

pedido1 inspect.
!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

pedido1:= Pedido crearPedidoNumero: 1 Mercaderias: negocio verMenu.

pedido1 inspect.
!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista .

pedido1 inspect.!

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=0.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista .

pedido1 inspect.!

!Pedido methodsFor!
verPrecioTotal:listaMercaderia

PrecioTotal:=0.

1 to:(Mercaderias size) do:[:i | PrecioTotal:= Mercaderias at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal:!public! !

!Pedido methodsFor!
verPrecioTotal:listaMercaderia

PrecioTotal:=0.

1 to:(listaMercaderia size) do:[:i | PrecioTotal:= listaMercaderia at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal:!public! !

!Pedido methodsFor!
verPrecioTotal:listaMercaderia

PrecioTotal:=0.

1 to:(listaMercaderia size) do:[:i | PrecioTotal:= listaMercaderia at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal:!public! !

!Pedido methodsFor!
verPrecioTotal:listaMercaderia

PrecioTotal:=0.

1 to:(listaMercaderia size) do:[:i | PrecioTotal:= listaMercaderia at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal:!public! !

!Pedido methodsFor!
verPrecioTotal:listaMercaderia

PrecioTotal:=0.

1 to:(listaMercaderia size) do:[:i | PrecioTotal:= listaMercaderia at:i verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal:!public! !

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista .

pedido1 verPrecioTotal: lista inspect.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista .

pedido1 verPrecioTotal: lista inspect.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista .

pedido1 verPrecioTotal: lista.!

!Pedido methodsFor!
verPrecioTotal:listaMercaderia

PrecioTotal:=0.

1 to:(listaMercaderia size) do:[:i | PrecioTotal:= (listaMercaderia at:i) verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal:!public! !

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista .

pedido1 verPrecioTotal: lista.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista .

pedido1 verPrecioTotal: lista.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista .

pedido1 verPrecioTotal: lista.

pedido1 inspect.Inspector!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista.

pedido1 verPrecioTotal: lista.

pedido1 inspect.!

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=self verPrecioTotal: mercaderias .! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=self verPrecioTotal: mercaderias.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0.
Hora:=0.
PrecioTotal:=self verPrecioTotal: mercaderias.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista.

"pedido1 verPrecioTotal: lista."

pedido1 inspect.!

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0."date"
Hora:=0."time"
PrecioTotal:=self verPrecioTotal: mercaderias.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

Pedido removeSelector: #verPrecioTotal ifAbsent: []!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido Mercaderias:lista.

"pedido1 verPrecioTotal: lista."

pedido1 inspect!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista.

"pedido1 verPrecioTotal: lista."

pedido1 inspect!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista.

"pedido1 verPrecioTotal: lista."

pedido1 inspectInspector
!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.

"negocio inspect."

lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista.

"pedido1 verPrecioTotal: lista."

pedido1 inspect.!

!Negocio methodsFor!
guardarPedido:unPedido! !
!Negocio categoriesFor: #guardarPedido:!public! !

Negocio removeSelector: #guardarPedido ifAbsent: []!

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.



^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Pedido methodsFor!
calcularPrecioTotal:listaMercaderia

PrecioTotal:=0.

1 to:(listaMercaderia size) do:[:i | PrecioTotal:= (listaMercaderia at:i) verPrecio + PrecioTotal].

^PrecioTotal.

! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

Pedido removeSelector: #verPrecioTotal: ifAbsent: []!

Pedido class removeSelector: #crearPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal: ifAbsent: []!

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=0."date"
Hora:=0."time"
PrecioTotal:=self calcularPrecioTotal: mercaderias.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

Pedido removeSelector: #iniciarPedidoNumero:Mercaderias:Fecha:Hora:PrecioTotal: ifAbsent: []!

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal


^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Pedido methodsFor!
verPrecioTotal

^PrecioTotal.

! !
!Pedido categoriesFor: #verPrecioTotal!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

Recaudacion:=Recaudacion + unPedido verPrecioTotal.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.



lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista.

"pedido1 verPrecioTotal: lista."

negocio guardarPedido: pedido1.

negocio inspect.!

!Pedido methodsFor!
verMercaderias

^Mercaderias.! !
!Pedido categoriesFor: #verMercaderias!public! !

!Pedido methodsFor!
verHora

^Hora.! !
!Pedido categoriesFor: #verHora!public! !

!Pedido methodsFor!
verFecha

^Fecha.! !
!Pedido categoriesFor: #verFecha!public! !

!Pedido methodsFor!
verNumero

^Numero.! !
!Pedido categoriesFor: #verNumero!public! !

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.



lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista.

"pedido1 verPrecioTotal: lista."

negocio guardarPedido: pedido1.

negocio inspect.!

"14:10:58, 02 July 2021: Image saved"!

"14:11:01, 02 July 2021: Image saved"!

"14:13:11, 02 July 2021: Dolphin Smalltalk Professional started"!

Object subclass: #Negocio
	instanceVariableNames: 'Nombre Direccion Telefono Menu Recaudacion Pedidos ContadorPedidos'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Negocio
	instanceVariableNames: 'Nombre Direccion Telefono Menu Recaudacion Pedidos ContadorPedidos'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Negocio methodsFor!
iniciarNegocioNombre:nombre Direccion:direccion Telefono:telefono

Nombre:=nombre.
Direccion:=direccion.
Telefono:=telefono.
Menu:=OrderedCollection new.
Recaudacion:=0.
ContadorPedidos:=0.
Pedidos:=OrderedCollection new.
! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

Recaudacion:=Recaudacion + unPedido verPrecioTotal.
ContadorPedidos:=ContadorPedidos+1.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
guardarPedido:unPedido

Pedidos add: unPedido.

Recaudacion:=Recaudacion + unPedido verPrecioTotal.
ContadorPedidos:=ContadorPedidos+1.

^Pedidos.! !
!Negocio categoriesFor: #guardarPedido:!public! !

!Negocio methodsFor!
verContadorPedidos

^ContadorPedidos.! !
!Negocio categoriesFor: #verContadorPedidos!public! !

Date today inspect.!

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=Date today."date"
Hora:=0."time"
PrecioTotal:=self calcularPrecioTotal: mercaderias.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

Time now inspect.!

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=Date today."date"
Hora:=Time now."time"
PrecioTotal:=self calcularPrecioTotal: mercaderias.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=Date today.
Hora:=Time now.
PrecioTotal:=self calcularPrecioTotal: mercaderias.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
iniciarPedidoNumero:numero Mercaderias:mercaderias

Numero:=numero.
Mercaderias:=mercaderias.
Fecha:=Date today.
Hora:=Time now.
PrecioTotal:=self calcularPrecioTotal: mercaderias.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

|negocio nombreNegocio dir tel|
1 to: 3 do:[:i| 
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio:=Negocio crearNegocioNombre: nom Direccion: dir Telefono: tel inspect.
 ].!

| negocio nombreNegocio dir tel|
1 to: 3 do:[:i| 
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nom Direccion: dir Telefono: tel inspect.
 ].!

| negocio nombreNegocio dir tel|
1 to: 3 do:[:i| 
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nom Direccion: dir Telefono: tel inspect.
 ].

!

| negocio nombreNegocio dir tel|
1 to: 3 do:[:i| 
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nombreNegocio Direccion: dir Telefono: tel inspect.
 ].

!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1  nombreNegocio dir tel|

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1  nombreNegocio dir tel|

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 300
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 400
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
pedido1:= Pedido crearPedidoNumero: 1 Mercaderias:lista.

negocio guardarPedido: pedido1.

negocio inspect.
!

| negocio nombreNegocio dir tel|
1 to: 3 do:[:i| 
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nombreNegocio Direccion: dir Telefono: tel inspect.
 ].
!

| negocio nombreNegocio dir tel|
1 to: 3 do:[:i| 
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir:= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel:= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nombreNegocio Direccion: dir Telefono: tel inspect.
 ].
!


"Bucle para crear negocio y agregarle mercaderias al menu"
| negocio nombreNegocio dir tel|
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir:= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel:= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nombreNegocio Direccion: dir Telefono: tel inspect.!

| negocio nombreNegocio dir tel|
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir:= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel:= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nombreNegocio Direccion: dir Telefono: tel inspect.!


"Bucle para crear negocio y agregarle mercaderias al menu"
| negocio nombreNegocio dir tel|
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir:= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel:= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nombreNegocio Direccion: dir Telefono: tel inspect.!

| negocio nombreNegocio dir tel|
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir:= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel:= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nombreNegocio Direccion: dir Telefono: tel.
negocio inspect.!

| negocio dir tel |
nombreNegocio:= Prompter  prompt: 'Ingrese el nombre del negocio'.
dir:= Prompter  prompt: 'Ingrese la direccion del negocio'.
tel:= Prompter  prompt: 'Ingrese el telefono del negocio'.

negocio :=Negocio crearNegocioNombre: nombreNegocio Direccion: dir Telefono: tel.
negocio inspect.!

nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocio := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.

1 to: 3
	do: 
		[:i |
		tipo := Prompter prompt: 'Ingrese 1 si es bebida o 2 si es comida'.
		tipo = '1'
			ifTrue: 
				[nombre := Prompter prompt: 'Ingrese el nombre del producto'.
				desc := Prompter prompt: 'Ingrese la descripcion del producto'.
				precio := Prompter prompt: 'Ingrese el precio del producto'.
				mililitros := Prompter prompt: 'Ingrese los mililitros del producto'.
				bebida := Bebida
							crearBebidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio Mililitros mililitros.
				negocio agregarMercaderia: bebida]
			ifFalse: 
				[nombre := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				desc := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				precio := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				categoria := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				comida := Comida
							crearComidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocio agregarMercaderia: comida]].

negocio inspect.!

nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocio := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.

1 to: 3
	do: 
		[:i |
		tipo := Prompter prompt: 'Ingrese 1 si es bebida o 2 si es comida'.
		tipo = '1'
			ifTrue: 
				[nombre := Prompter prompt: 'Ingrese el nombre del producto'.
				desc := Prompter prompt: 'Ingrese la descripcion del producto'.
				precio := Prompter prompt: 'Ingrese el precio del producto'.
				mililitros := Prompter prompt: 'Ingrese los mililitros del producto'.
				bebida := Bebida
							crearBebidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio Mililitros: mililitros.
				negocio agregarMercaderia: bebida]
			ifFalse: 
				[nombre := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				desc := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				precio := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				categoria := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				comida := Comida
							crearComidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocio agregarMercaderia: comida]].

negocio inspect.!

nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocio := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.

1 to: 3
	do: 
		[:i |
		tipo := Prompter prompt: 'Ingrese 1 si es bebida o 2 si es comida'.
		tipo = '1'
			ifTrue: 
				[nombre := Prompter prompt: 'Ingrese el nombre del producto'.
				desc := Prompter prompt: 'Ingrese la descripcion del producto'.
				precio := Prompter prompt: 'Ingrese el precio del producto'.
				mililitros := Prompter prompt: 'Ingrese los mililitros del producto'.
				bebida := Bebida
							crearBebidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio Mililitros: mililitros.
				negocio agregarMercaderia: bebida]
			ifFalse: 
				[nombre := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocio agregarMercaderia: comida]].

negocio inspect.Inspector!

nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocio := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.

1 to: 2
	do: 
		[:i |
		tipo := Prompter prompt: 'Ingrese 1 si es bebida o 2 si es comida'.
		tipo = '1'
			ifTrue: 
				[nombre := Prompter prompt: 'Ingrese el nombre del producto'.
				desc := Prompter prompt: 'Ingrese la descripcion del producto'.
				precio := Prompter prompt: 'Ingrese el precio del producto'.
				mililitros := Prompter prompt: 'Ingrese los mililitros del producto'.
				bebida := Bebida
							crearBebidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio Mililitros: mililitros.
				negocio agregarMercaderia: bebida]
			ifFalse: 
				[nombre := Prompter prompt: 'Ingrese el tipo de mercaderia a ingresar'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocio agregarMercaderia: comida]].

negocio inspect.!

nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocio := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.

1 to: 2
	do: 
		[:i |
		tipo := Prompter prompt: 'Ingrese 1 si es bebida o 2 si es comida'.
		tipo = '1'
			ifTrue: 
				[nombre := Prompter prompt: 'Ingrese el nombre del producto'.
				desc := Prompter prompt: 'Ingrese la descripcion del producto'.
				precio := Prompter prompt: 'Ingrese el precio del producto'.
				mililitros := Prompter prompt: 'Ingrese los mililitros del producto'.
				bebida := Bebida
							crearBebidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio Mililitros: mililitros.
				negocio agregarMercaderia: bebida]
			ifFalse: 
				[nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocio agregarMercaderia: comida]].

negocio inspect.!

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Categoria:=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Categoria:=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

!Comida methodsFor!
iniciarComidaId:unId nombre:unNombre descripcion:unaDescripcion precio:unPrecio categoria:unaCategoria

Categoria:=unaCategoria.

super iniciarMercaderiaId: unId nombre: unNombre descripcion: unaDescripcion precio: unPrecio tipo: 'Comida'.! !
!Comida categoriesFor: #iniciarComidaId:nombre:descripcion:precio:categoria:!public! !

1 to: 2
	do: 
		[:i |
		tipo := Prompter prompt: 'Ingrese 1 si es bebida o 2 si es comida'.
		tipo = '1'
			ifTrue: 
				[nombre := Prompter prompt: 'Ingrese el nombre del producto'.
				desc := Prompter prompt: 'Ingrese la descripcion del producto'.
				precio := Prompter prompt: 'Ingrese el precio del producto'.
				mililitros := Prompter prompt: 'Ingrese los mililitros del producto'.
				bebida := Bebida
							crearBebidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio Mililitros: mililitros.
				negocio agregarMercaderia: bebida]
			ifFalse: 
				[nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: i
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocio agregarMercaderia: comida]].

negocio inspect.!

"17:29:34, 02 July 2021: Image saved"!

"10:00:05, 03 July 2021: Dolphin Smalltalk Professional started"!

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:mercaderia| mercaderia verPrecio >=unPrecio ].! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:mercaderia| mercaderia verPrecio >=unPrecio ].! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:mercaderia| mercaderia verPrecio >=unPrecio ].

^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:mercaderia| mercaderia verPrecio >=unPrecio ].

^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !


negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista add: mercaderia1 ;lista add: mercaderia2.

lista add: mercaderia3.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
negocio guardarPedido: pedido1.
negocio inspect.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 lista |

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista add: mercaderia1 ;lista add: mercaderia2.

lista add: mercaderia3.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
negocio guardarPedido: pedido1.
negocio inspect.
negocio verPedidosMayoresA: 500!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
negocio guardarPedido: pedido1.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 Transcript clear.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
negocio guardarPedido: pedido1.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500.!

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:mercaderia| mercaderia verPrecioTotal >=unPrecio ].

^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:mercaderia| mercaderia verPrecioTotal >=unPrecio ].

^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
negocio guardarPedido: pedido1.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500.!

negocio verPedidosMayoresA: 500.
!

negocio verPedidosMayoresA: 500 inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
negocio guardarPedido: pedido1.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
negocio guardarPedido: pedido1.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 inspect.
!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3:= Pedido crearPedidoNumero: 3 Mercaderias: lista3
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 inspect.
!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 inspect.!

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:mercaderia| mercaderia verPrecioTotal >= unPrecio ].

^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:mercaderia| mercaderia verPrecioTotal >= unPrecio ].

^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verPedidosMayoresA:unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:pedido| pedido verPrecioTotal >= unPrecio ].

^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

pedido3 verPrecioTotal.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

pedido3 verPrecioTotal inspect.!

!Negocio methodsFor!
verPedidosMayoresA: unPrecio
"Select Pedidos mayores a un precio"

|col|

col:= Pedidos select:[:pedido| pedido verPrecioTotal >= unPrecio ].

^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA: 500 inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA:500 inspect.!

"10:58:33, 03 July 2021: Image saved"!

"10:58:37, 03 July 2021: Image saved"!

"11:01:51, 03 July 2021: Dolphin Smalltalk Professional started"!

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col:= Menu reject:[:mercaderia| mercaderia  verNota=8].! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col:= Menu reject:[:mercaderia| mercaderia  verTipo= unTipo ].! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col:= Menu reject:[:mercaderia| mercaderia  verTipo= unTipo].! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col:= Menu reject:[:mercaderia| mercaderia  verTipo= unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
negocio verMercaderiaTipo: 'bebida'.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
negocio verMercaderiaTipo: 'bebida' inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
negocio verMercaderiaTipo: 'Bebida' inspect.!

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col:= Menu reject:[:mercaderia| mercaderia  verTipo== unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col:= Menu reject:[:mercaderia| mercaderia  verTipo== unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
negocio verMercaderiaTipo: 'Bebida' inspect.!

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col:= Menu reject:[:mercaderia| mercaderia  verTipo == unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col := Menu reject:[:mercaderia| mercaderia  verTipo == unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col := Menu reject:[:mercaderia| mercaderia  verTipo == unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
negocio verMercaderiaTipo:'Bebida' inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo:'Bebida') inspect.!

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col := Menu reject:[:mercaderia| mercaderia  verTipo = unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col := Menu reject:[:mercaderia| mercaderia  verTipo = unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col := Menu reject:[:mercaderia| mercaderia  verTipo = unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col := Menu reject:[:mercaderia| mercaderia  verTipo = unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo:'Bebida') inspect.!

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|

col := Menu reject:[:mercaderia| mercaderia  verTipo ~= unTipo].

^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo:'Bebida') inspect.!

"11:23:36, 03 July 2021: Image saved"!

"11:23:43, 03 July 2021: Image saved"!

"15:01:53, 03 July 2021: Dolphin Smalltalk Professional started"!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 lista |
negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo:'Bebida') inspect.

"Select Pedidos mayores a $500"
negocio verPedidosMayoresA:500 inspect.
!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 lista |
negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo:'Bebida') inspect.

"Select Pedidos mayores a $500"
(negocio verPedidosMayoresA:500) inspect.!

| mercaderia1 mercaderia2 mercaderia3 negocio pedido1 lista |
negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2:=OrderedCollection new.
lista3:=OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add:mercaderia1.
lista3 add:mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo:'Bebida') inspect.

"Select Pedidos mayores a $500"
(negocio verPedidosMayoresA:500) inspect.
!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------"
|tipo|
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.	
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0']
	whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]
			ifFalse: []].
				negocioSim inspect.!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------"
|tipo|
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.	
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0']
	whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]
			ifFalse: []].
				negocioSim inspect.!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------"
|tipo|
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.	
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0']
	whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]
			ifFalse: []].
				negocioSim inspect.
!

| tipo |
"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------"
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect.
!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------"
| tipo |
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect.!


"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------"
| tipo |
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect.
!

!Negocio methodsFor!
verOcurrenciasMercaderia! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

Pedidos! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

Pedidos! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

Pedidos! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

Pedidos

! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|listaMercaderiasPedidas|
listaMercaderiasPedidas:= OrderedCollection new.

1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias) ].
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|listaMercaderiasPedidas|
listaMercaderiasPedidas:= OrderedCollection new.

1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias) ].
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|listaMercaderiasPedidas|
listaMercaderiasPedidas:= OrderedCollection new.

1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias)].
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|listaMercaderiasPedidas|
listaMercaderiasPedidas:= OrderedCollection new.

1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias)].

^listaMercaderiasPedidas.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|listaMercaderiasPedidas|
listaMercaderiasPedidas:= OrderedCollection new.

1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias)].

^listaMercaderiasPedidas.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia

|listaMercaderiasPedidas|
listaMercaderiasPedidas:= OrderedCollection new.

1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias)].

"1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias)]."

^listaMercaderiasPedidas.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|listaMercaderiasPedidas|
listaMercaderiasPedidas:= OrderedCollection new.

1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias)].

"1 to:(Pedidos size) do:[:i | listaMercaderiasPedidas add: ((Pedidos at:i) verMercaderias)]."

^listaMercaderiasPedidas.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) do: [:j | (((Pedidos at:i) verMercaderias) at: j) verNombre ] ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) do: [:j | lista add:(((Pedidos at:i) verMercaderias) at: j) verNombre ] ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) do: [:j | lista add:(((Pedidos at:i) verMercaderias) at: j) verNombre ] ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) do: [:j | lista add:(((Pedidos at:i) verMercaderias) at: j) verNombre ] ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) do: [:j | lista add:(((Pedidos at:i) verMercaderias) at: j) verNombre ] ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) do: [:j | lista add:(((Pedidos at:i) verMercaderias) at: j) verNombre ] ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) do: [:j | lista add:(((Pedidos at:i) verMercaderias) at: j) verNombre ] ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia

|lista|
lista:= OrderedCollection new.

1 to:(Pedidos size) do:[:i | 1 to: ((Pedidos at:i) verMercaderias) do: [:j | lista add:(((Pedidos at:i) verMercaderias) at: j) verNombre ] ].

"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."

^lista.
! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j | lista add: (((Pedidos at: i) verMercaderias at: j) verNombre)]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add: (((Pedidos at: i) verMercaderias at: j) verNombre)]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	
1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)].



"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	
1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)].



"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	
1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)].



"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j | lista add: (((Pedidos at: i) verMercaderias) at: j) verNombre]].	"

	"
	1 to: Pedidos size do: [:i | lista add: (Pedidos at: i) verMercaderias].



	"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j | lista add: ((((Pedidos at: i) verMercaderias) at: j) verNombre)]].	"

	"
	1 to: Pedidos size do: [:i | lista add: (Pedidos at: i) verMercaderias].



	"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j |]].	"

	"
	1 to: Pedidos size do: [:i | lista add: (Pedidos at: i) verMercaderias].



	"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j |]].	
	



	"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size do: [:i | 1 to: (Pedidos at: i) verMercaderias do: [:j | ]].




	"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: (Pedidos size) do: [:i | 1 to: (Pedidos at: i) verMercaderias do: [:j | ]].




	"1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]]."

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.




	1 to: Pedidos size
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add:(((Pedidos at: i) verMercaderias at: j) verNombre)]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: (Pedidos size)
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: (Pedidos size)
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias)
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: (Pedidos size)
		do: 
			[:i |
			1 to: ((Pedidos at: i) verMercaderias) size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: (Pedidos size)
		do: 
			[:i |
			1 to: (((Pedidos at: i) verMercaderias) size)
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].

	"1 to:(Pedidos size) do:[:i | lista add: ((Pedidos at:i) verMercaderias)]."
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista.! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	^lista.! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	




^lista.! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	




^lista.! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	




^lista.! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet.


^lista.! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet.


^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet. "Lista con mercaderias sin repetir"


^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet. "Lista con mercaderias sin repetir"


^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet. "Lista con mercaderias sin repetir"

^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR |
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet. "Lista con mercaderias sin repetir"

^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.
!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario|
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet. "Lista con mercaderias sin repetir"

^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario|
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet. "Lista con mercaderias sin repetir"

^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario|
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet. "Lista con mercaderias sin repetir"

diccionario :=Dictionary new.

^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario|
	lista := OrderedCollection new.  "lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	

listaSR:=lista asSet. "Lista con mercaderias sin repetir"

diccionario :=Dictionary new.

listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom ) ].

^listaSR .! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^listaSR! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^listaSR! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^listaSR! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	listaSR := lista asSet.	                "Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^listaSR! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	listaSR := lista asSet.	                "Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^listaSR! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	listaSR := lista asSet.	                "Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^diccionario! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j) verNombre]].
	listaSR := lista asSet.	                "Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^diccionario.! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Diccionario"
negocio verOcurrenciasMercaderia inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorPrecio! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

|lista|

lista := SortedCollection new.! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

|lista|

lista := SortedCollection new.! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

|lista|
"lista := SortedCollection new."

lista:= Menu as SortedCollection.! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

|lista|
"lista := SortedCollection new."

lista:= Menu as SortedCollection.

^lista.! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

|lista|
"lista := SortedCollection new."

lista:= Menu as SortedCollection.

^lista.! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

|lista|
"lista := SortedCollection new."

lista:= Menu asSortedCollection.

^lista.! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

|lista|
"lista := SortedCollection new."

lista:= Menu asSortedCollection.
^lista.! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio

|lista|
"lista := SortedCollection new."

lista:= Menu asSortedCollection.
^lista.! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista := Menu asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista := Menu asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista := Menu asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista := Menu asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista := Menu asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista := self Menu asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista := (self Menu) asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista :=  Menu asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	"lista := SortedCollection new."
	lista :=  #(1 4 5 8 90) asSortedCollection.
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorPrecio
	| lista |
	lista := SortedCollection new.


	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| lista |
	lista := SortedCollection new sortBlock:[:x :y| x verPrecio ] .


	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| lista |
	lista := SortedCollection new sortBlock:[:x :y| x verPrecio ] .


	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| lista |
	lista := SortedCollection new sortBlock:[:x :y| x verPrecio >= y verPrecio ] .


	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| lista |
	lista := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| lista |
	lista := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| lista |
	lista := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| lista listaMercaderias|
	lista := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| lista listaMercaderias|
	lista := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^lista! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias|
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias|
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias|
	
	listaMercaderias:=Menu.
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias|
	
	listaMercaderias:=Menu.
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias|
	
	listaMercaderias:=Menu.
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias|
	
	listaMercaderias:=Menu.
listaMercaderias:= Menu asSortedCollection .
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias|
	
	listaMercaderias:=Menu.
listaMercaderias:= Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias|
	
	listaMercaderias:=Menu.
listaMercaderias:= Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	listaMercaderias := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	listaMercaderias := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	listaMercaderias := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaMercaderias.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^Menu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	listaMercaderias := Menu.
	Menu := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^Menu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |

	Menu := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^Menu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	
	Menu := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^Menu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	
	listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorPrecio inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
	
	listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	^Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^Menu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	^self Menu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	^self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	^(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]).
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]).
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	"listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	listaOrdenada := Menu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	listaOrdenada := self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^ (self verMenu).! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	"listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^ (self verMenu).! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada listaMercaderias |
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	"listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^ (self verMenu).! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		
	"(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio])."
	"listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^ (self verMenu).! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorPrecio) inspect.!

!Negocio methodsFor!
verMenu

^Menu.! !
!Negocio categoriesFor: #verMenu!public! !

Negocio removeSelector: #ordenarMercaderiasPorPrecio ifAbsent: []!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		
	^(self verMenu asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]).
	"listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			no 	mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		
	^(self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		
	^(self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			no 	mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		|listaOrdenada|
	
	listaOrdenada := (self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			no 	mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		|listaOrdenada|

	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		|listaOrdenada|

	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^Menu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			no 	mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		

	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^Menu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
"Creacion de mercaderias"
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			no 	mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.!

mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3 no
			mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		

	"listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio]."
^ self verMenu.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3 no
			mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

"16:30:47, 03 July 2021: Image saved"!

"16:30:51, 03 July 2021: Dolphin Smalltalk Professional started"!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3 no
			mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3 no
			mbre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	
		|listaOrdenada|

	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].

^listaOrdenada.
! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].

listaOrdenada add: 10.
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada :=(self verMenu) asSortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].

	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio].

	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio].

	^listaOrdenada

"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada :=(self verMenu) asSortedCollection.

	^listaOrdenada

"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada :=(self verMenu) asSortedCollection.

1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Pedidos at: i) verMercaderias at: j) verNombre]].

	^listaOrdenada

"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada :=(self verMenu) asSortedCollection.

1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Pedidos at: i) verMercaderias at: j)]].

	^listaOrdenada

"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := self verMenu asSortedCollection.
	1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Pedidos at: i) verMercaderias at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := self verMenu asSortedCollection.
	1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Pedidos at: i) verMercaderias at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := self verMenu asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Pedidos at: i) verMercaderias at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection  new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Pedidos at: i) verMercaderias at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Pedidos at: i) verMercaderias at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Pedidos at: i) verMercaderias at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Menu at: i) verMercaderias at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size
		do: 
			[:i |
			1 to: (Menu at: i) verMercaderias size
				do: [:j | listaOrdenada add: ((Menu at: i) at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size
		do: [:i | 1 to: (Menu at: i) verMercaderias size do: [:j | listaOrdenada add: ((Menu at: i) at: j)]].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	
1 to: Menu size
		do: [:i | (Menu at: i)].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	
1 to: Menu size
		do: [:i | listaOrdenada add: (Menu at: i)].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 500
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 1220
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.


"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.

"Sort"
negocio ordenarMercaderiasPorMayorPrecio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	
1 to: Menu size
		do: [:i | listaOrdenada add: (Menu at: i)].
	^listaOrdenada

	"listaOrdenada :=(self verMenu) asSortedCollection sortBlock: [:x :y | x verPrecio >= y verPrecio]."! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].
	^listaOrdenada! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

"16:45:13, 03 July 2021: Image saved"!

"17:53:59, 03 July 2021: Dolphin Smalltalk Professional started"!

!Negocio methodsFor!
verPedidoPorId:unId

|pedido|

pedido:= Pedidos detect: [:pedido | pedido verId = unId].! !
!Negocio categoriesFor: #verPedidoPorId:!public! !

!Negocio methodsFor!
verPedidoPorId:unId

|pedido|

pedido:= Pedidos detect: [:pedido | pedido verId = unId].

^pedido.! !
!Negocio categoriesFor: #verPedidoPorId:!public! !

!Negocio methodsFor!
verPedidoPorId:unId

|pedido|

pedido:= Pedidos detect: [:pedido | pedido verId = unId].

^pedido.! !
!Negocio categoriesFor: #verPedidoPorId:!public! !

!Negocio methodsFor!
buscarPedidoPorId:unId

|pedido|

pedido:= Pedidos detect: [:pedido | pedido verId = unId].

^pedido.! !
!Negocio categoriesFor: #buscarPedidoPorId:!public! !

Negocio removeSelector: #verPedidoPorId: ifAbsent: []!

!Negocio methodsFor!
buscarPedidoPorId:unId

|pedido|

pedido:= Pedidos detect: [:item | item verId = unId].

^pedido.! !
!Negocio categoriesFor: #buscarPedidoPorId:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.


"Detect"
negocio buscarPedidoPorId: 2 inspect.!

!Negocio methodsFor!
buscarPedidoPorNumero:unNumero

|pedido|

pedido:= Pedidos detect: [:item | item verId = unNumero].

^pedido.! !
!Negocio categoriesFor: #buscarPedidoPorNumero:!public! !

Negocio removeSelector: #buscarPedidoPorId: ifAbsent: []!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.


"Detect"
negocio buscarPedidoPorNumero: 2 inspect.!

!Negocio methodsFor!
buscarPedidoPorNumero:unNumero

|pedido|

pedido:= Pedidos detect: [:item | item verNumero = unNumero].

^pedido.! !
!Negocio categoriesFor: #buscarPedidoPorNumero:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.


"Detect"
negocio buscarPedidoPorNumero: 2 inspect.!

!Negocio methodsFor!
buscarPedidoPorNumero:unNumero

|pedido|

pedido:= Pedidos detect: [:item | (item verNumero) = unNumero].

^pedido.! !
!Negocio categoriesFor: #buscarPedidoPorNumero:!public! !

!Negocio methodsFor!
buscarPedidoPorNumero:unNumero

|pedido|

pedido:= Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil].

^pedido.! !
!Negocio categoriesFor: #buscarPedidoPorNumero:!public! !

!Negocio methodsFor!
buscarPedidoPorNumero:unNumero

|pedido|

pedido:= Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil].

^pedido.! !
!Negocio categoriesFor: #buscarPedidoPorNumero:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.


"Detect"
negocio buscarPedidoPorNumero: 2 inspect.!

!Negocio methodsFor!
buscarPedidoPorNumero:unNumero

|pedido|

^Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil].

"^pedido."! !
!Negocio categoriesFor: #buscarPedidoPorNumero:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.


"Detect"
negocio buscarPedidoPorNumero: 2 inspect.
!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.


"Detect"
(negocio buscarPedidoPorNumero:2) inspect.!

!Negocio methodsFor!
buscarPedidoPorNumero:unNumero

^Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil].
! !
!Negocio categoriesFor: #buscarPedidoPorNumero:!public! !

!Negocio methodsFor!
buscarPedidoPorNumero:unNumero

^Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil].
! !
!Negocio categoriesFor: #buscarPedidoPorNumero:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.
negocio inspect.


"Detect"
(negocio buscarPedidoPorNumero:5) inspect.!

!Pedido methodsFor!
calcularPrecioTotal:listaMercaderia

PrecioTotal:=0.

"1 to:(listaMercaderia size) do:[:i | PrecioTotal:= (listaMercaderia at:i) verPrecio + PrecioTotal]."

^PrecioTotal.

! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal:listaMercaderia

PrecioTotal:=0.

"1 to:(listaMercaderia size) do:[:i | PrecioTotal:= (listaMercaderia at:i) verPrecio + PrecioTotal]."

^PrecioTotal.

! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal:listaMercaderia
|listaSuma|
PrecioTotal:=0.

"1 to:(listaMercaderia size) do:[:i | PrecioTotal:= (listaMercaderia at:i) verPrecio + PrecioTotal]."
listaSuma:= Mercaderias collect:[:alu| alu verNombre].

^PrecioTotal.

! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal:listaMercaderia

PrecioTotal:=0.

1 to:(listaMercaderia size) do:[:i | PrecioTotal:= (listaMercaderia at:i) verPrecio + PrecioTotal].


^PrecioTotal.

! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	PrecioTotal := 0.
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	PrecioTotal := 0.
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	PrecioTotal := 0.
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	|PrecioTotal|
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	|PrecioTotal|
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia

	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal.! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.!

!Pedido methodsFor!
calcularPrecioTotal: listaMercaderia

PrecioTotal:=0.
	1 to: listaMercaderia size do: [:i | PrecioTotal := (listaMercaderia at: i) verPrecio + PrecioTotal].
	^PrecioTotal.! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.!

!Negocio methodsFor!
verCategoriasComidas

! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

!Negocio methodsFor!
verCategoriasComidas

! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

!Negocio methodsFor!
verCategoriasComidas

|listaComidas|

listaComidas :=self verMercaderiaTipo: 'Comida'.! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

!Negocio methodsFor!
verCategoriasComidas

|listaComidas|

listaComidas :=self verMercaderiaTipo: 'Comida'.

^listaComidas.! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

!Negocio methodsFor!
verCategoriasComidas

|listaComidas|

listaComidas :=self verMercaderiaTipo: 'Comida'.

^listaComidas.! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.

"Collect"
negocio verCategoriasComidas inspect.!

!Negocio methodsFor!
verCategoriasComidas
	| listaComidas listaCategorias |
	listaComidas := self verMercaderiaTipo: 'Comida'.
	listaCategorias := listaComidas collect: [:alu | alu verNombre].
	^listaComidas! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

!Negocio methodsFor!
verCategoriasComidas
	| listaComidas listaCategorias |
	listaComidas := self verMercaderiaTipo: 'Comida'.
	listaCategorias := listaComidas collect: [:alu | alu verNombre].
	^listaCategorias! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

!Negocio methodsFor!
verCategoriasComidas
	| listaComidas listaCategorias |
	listaComidas := self verMercaderiaTipo: 'Comida'.
	listaCategorias := listaComidas collect: [:alu | alu verNombre].
	^listaCategorias! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

!Negocio methodsFor!
verCategoriasComidas
	| listaComidas listaCategorias |
	listaComidas := self verMercaderiaTipo: 'Comida'.
	listaCategorias := listaComidas collect: [:comida | comida verCategoria].
	^listaCategorias! !
!Negocio categoriesFor: #verCategoriasComidas!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.

"Collect"
negocio verCategoriasComidas inspect.!

"18:32:02, 03 July 2021: Image saved"!

"18:32:09, 03 July 2021: Image saved"!

"22:13:14, 05 July 2021: Dolphin Smalltalk Professional started"!

"22:15:38, 05 July 2021: Dolphin Smalltalk Professional started"!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------
| tipo |
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect.

------------------------------------------------------------------------------------------------------------------"
"Creacion de mercaderias"
negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.

"Collect obtener las categorias de todas las comidas"
negocio verCategoriasComidas inspect.

"Detect obtener un pedido por numero de pedido"
(negocio buscarPedidoPorNumero:5) inspect.

"Sort ordenar por mayor a menor precio las mercaderias"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.

"Diccionario"
(negocio verOcurrenciasMercaderia) inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo: 'Bebida') inspect.

"Select Pedidos mayores a $500"
(negocio verPedidosMayoresA: 500) inspect.


"Cómo mostrar cosas por consolita:"
Transcript show: 'Hola, el negocio se llama: '.
Transcript
	show: negocio verNombre;
	cr.
Transcript show: 'Cantidad de pedidos: '.
Transcript
	show: negocio verPedidos size printString;
	cr!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------
| tipo |
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect.

------------------------------------------------------------------------------------------------------------------"
"Creacion de mercaderias"
negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.

"Collect obtener las categorias de todas las comidas"
negocio verCategoriasComidas inspect.

"Detect obtener un pedido por numero de pedido"
(negocio buscarPedidoPorNumero:5) inspect.

"Sort ordenar por mayor a menor precio las mercaderias"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.

"Diccionario"
(negocio verOcurrenciasMercaderia) inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo: 'Bebida') inspect.

"Select Pedidos mayores a $500"
(negocio verPedidosMayoresA: 500) inspect.


"Cómo mostrar cosas por consolita:"
Transcript show.
Transcript show: 'Hola, el negocio se llama: '.
Transcript
	show: negocio verNombre;
	cr.
Transcript show: 'Cantidad de pedidos: '.
Transcript
	show: negocio verPedidos size printString;
	cr!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------
| tipo |
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect.

------------------------------------------------------------------------------------------------------------------"
"Creacion de mercaderias"
negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.

"Collect obtener las categorias de todas las comidas"
negocio verCategoriasComidas inspect.

"Detect obtener un pedido por numero de pedido"
(negocio buscarPedidoPorNumero:5) inspect.

"Sort ordenar por mayor a menor precio las mercaderias"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.

"Diccionario"
(negocio verOcurrenciasMercaderia) inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo: 'Bebida') inspect.

"Select Pedidos mayores a $500"
(negocio verPedidosMayoresA: 500) inspect.


"Cómo mostrar cosas por consolita:"
Transcript show.
Transcript show: 'Hola, el negocio se llama: '.
Transcript
	show: negocio verNombre;
	cr.
Transcript show: 'Cantidad de pedidos: '.
Transcript
	show: negocio verPedidos size printString;
	cr!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------
| tipo |
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect.

------------------------------------------------------------------------------------------------------------------"
"Creacion de mercaderias"
negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.

"Collect obtener las categorias de todas las comidas"
negocio verCategoriasComidas inspect.

"Detect obtener un pedido por numero de pedido"
(negocio buscarPedidoPorNumero:5) inspect.

"Sort ordenar por mayor a menor precio las mercaderias"
(negocio ordenarMercaderiasPorMayorPrecio) inspect.

"Diccionario"
(negocio verOcurrenciasMercaderia) inspect.

"Reject obtener mercaderias por tipo"
(negocio verMercaderiaTipo: 'Bebida') inspect.

"Select Pedidos mayores a $500"
(negocio verPedidosMayoresA: 500) inspect.


"Cómo mostrar cosas por consolita:"
Transcript show.
Transcript show: 'Hola, el negocio se llama: '.
Transcript
	show: negocio verNombre;
	cr.
Transcript show: 'Cantidad de pedidos: '.
Transcript
	show: negocio verPedidos size printString;
	cr!

|unPedido mercaderias|
mercaderias := Collection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	PrecioTotal := 0.
	1 to: Mercaderias size
		do: [:i | PrecioTotal := elMenu at: (Mercaderias at: i) verPrecio + PrecioTotal]! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	PrecioTotal := 0.
	1 to: Mercaderias size
		do: [:i | PrecioTotal := elMenu at: (Mercaderias at: i) verPrecio + PrecioTotal]! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	PrecioTotal := 0.
	1 to: Mercaderias size
		do: [:i | PrecioTotal := elMenu at: (Mercaderias at: i) verPrecio + PrecioTotal]! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.!

!Pedido methodsFor!
iniciarPedidoNumero: numero Mercaderias: mercaderias
	Numero := numero.
	Mercaderias := mercaderias.
	Fecha := Date today.
	Hora := Time now! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.!

lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.!

pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.!

|unPedido mercaderias|
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.!

|unPedido mercaderias|
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
unPedido inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.


mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.!

miNegocio := Negocio!

mercaderia4 := Bebida!



miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.

mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.

miNegocio inspect.!



mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.

unPedido inspect.!

mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.

unPedido inspect.!

!Pedido methodsFor!
iniciarPedidoNumero: numero Mercaderias: mercaderias
	Numero := numero.
	Mercaderias := mercaderias.
	Fecha := Date today.
	Hora := Time now.
	PrecioTotal := 0! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	1 to: Mercaderias size
		do: [:i | PrecioTotal := elMenu at: (Mercaderias at: i) verPrecio + PrecioTotal]! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.

unPedido inspect.!



miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.

mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.

miNegocio inspect.


mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
unPedido calcularPrecioTotal: (miNegocio verMenu).!



miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.

mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.

miNegocio inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
miNegocio inspect.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
unPedido inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
miNegocio inspect.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
unPedido inspect.
(miNegocio verMenu) inspect.!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	1 to: Mercaderias size
		do: [:i | PrecioTotal := (elMenu at: (Mercaderias at: i) verPrecio) + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	1 to: Mercaderias size
		do: [:i | PrecioTotal := (elMenu at: (Mercaderias at: i) verPrecio) + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu)
"unPedido inspect."!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
"unPedido inspect."!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	"elMenu inspect.
	Mercaderias inspect.
	1 to: Mercaderias size
		do: [:i | PrecioTotal := (elMenu at: (Mercaderias at: i) verPrecio) + PrecioTotal]."

	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
"unPedido inspect."!

mercaderias add: 2.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
"unPedido inspect."!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
"unPedido inspect."!

unPedido calcularPrecioTotal: (miNegocio verMenu).!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
"unPedido inspect."!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
unPedido inspect.
unPedido calcularPrecioTotal: (miNegocio verMenu).
unPedido inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
unPedido inspect.
(miNegocio verMenu) inspect.!

!Negocio methodsFor!
buscarPrecioMercaderia: unId
	| unaMercaderia unPrecio |
	unaMercaderia := Menu detect: [:item | item verId = unId] ifNone: [^nil].
	unPrecio := unaMercaderia verPrecio.
	^unPrecio! !
!Negocio categoriesFor: #buscarPrecioMercaderia:!public! !

!Negocio methodsFor!
buscarPrecioMercaderiaPorId: unId
	| unaMercaderia unPrecio |
	unaMercaderia := Menu detect: [:item | item verId = unId] ifNone: [^nil].
	unPrecio := unaMercaderia verPrecio.
	^unPrecio! !
!Negocio categoriesFor: #buscarPrecioMercaderiaPorId:!public! !

Object subclass: #Pedido
	instanceVariableNames: 'Numero Mercaderias Fecha Hora PrecioTotal Valido'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Pedido
	instanceVariableNames: 'Numero Mercaderias Fecha Hora PrecioTotal Valido'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido := true.
	1 to: Mercaderias size
		do: 
			[:i |
			| unId unaMercaderia unPrecio |
			unId := Mercaderias at: i.
			unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [Valido = false].
			unPrecio := unaMercaderia verPrecio.
			PrecioTotal := unPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
iniciarPedidoNumero: numero Mercaderias: mercaderias
	Numero := numero.
	Mercaderias := mercaderias.
	Fecha := Date today.
	Hora := Time now.
	PrecioTotal := 0.
	Valido := false! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	1 to: Mercaderias size
		do: 
			[:i |
			| unId unaMercaderia unPrecio |
			unId := Mercaderias at: i.
			unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
			unPrecio := unaMercaderia verPrecio.
			PrecioTotal := unPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

Object subclass: #Pedido
	instanceVariableNames: 'Numero Mercaderias Fecha Hora PrecioTotal'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
unPedido inspect.
(miNegocio verMenu) inspect.!

Negocio removeSelector: #buscarPrecioMercaderiaPorId: ifAbsent: []!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPrecio := miNegocio buscarPrecioMercaderia: 1.
unPrecio inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
unPedido inspect.
miNegocio verMenu inspect!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
unPedido inspect.
unPedido calcularPrecioTotal: (miNegocio verMenu).
unPedido inspect.
miNegocio verMenu inspect!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
unPedido inspect.
unPedido calcularPrecioTotal: (miNegocio verMenu).
unPedido inspect.
miNegocio verMenu inspect!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	1 to: Mercaderias size
		do: 
			[:i |
			| unId unaMercaderia unPrecio |
			unId := Mercaderias at: i.
			unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
			unPrecio := unaMercaderia verPrecio.
			PrecioTotal := unPrecio + PrecioTotal].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
iniciarPedidoNumero: numero Mercaderias: mercaderias
	Numero := numero.
	Mercaderias := mercaderias.
	Fecha := Date today.
	Hora := Time now.
	PrecioTotal := 0! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: (miNegocio verMenu).
unPedido inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio
	agregarMercaderia: Comida
	crearComidaId: 1
	nombre: 'Pizza Mozzarella'
	descripcion: 'Pizza con queso mozzarella al horno'
	precio: 350
	categoria: 'Pizzas'.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: miNegocio verMenu.
unPedido inspect!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio
	agregarMercaderia: (Comida
	crearComidaId: 1
	nombre: 'Pizza Mozzarella'
	descripcion: 'Pizza con queso mozzarella al horno'
	precio: 350
	categoria: 'Pizzas').
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: miNegocio verMenu.
unPedido inspect!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio
	agregarMercaderia: [Comida
	crearComidaId: 1
	nombre: 'Pizza Mozzarella'
	descripcion: 'Pizza con queso mozzarella al horno'
	precio: 350
	categoria: 'Pizzas'].!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio
	agregarMercaderia: [Comida
	crearComidaId: 1
	nombre: 'Pizza Mozzarella'
	descripcion: 'Pizza con queso mozzarella al horno'
	precio: 350
	categoria: 'Pizzas'].
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: miNegocio verMenu.
unPedido inspect!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio
	agregarMercaderia: [Comida
	crearComidaId: 1
	nombre: 'Pizza Mozzarella'
	descripcion: 'Pizza con queso mozzarella al horno'
	precio: 350
	categoria: 'Pizzas'].
miNegocio inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio
	agregarMercaderia: [Comida
	crearComidaId: 1
	nombre: 'Pizza Mozzarella'
	descripcion: 'Pizza con queso mozzarella al horno'
	precio: 350
	categoria: 'Pizzas'].
miNegocio inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: (Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas').
miNegocio inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: [Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.].
miNegocio inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
miNegocio inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: (Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas').
miNegocio inspect.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
"miNegocio inspect."
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
"unPedido inspect."
unPedido calcularPrecioTotal: miNegocio verMenu.
unPedido inspect!

Negocio removeSelector: #cobrarPedido ifAbsent: []!

!Negocio methodsFor!
cobrarPedido: unPedido
	Pedidos add: unPedido.
	Recaudacion := Recaudacion + unPedido verPrecioTotal.
	ContadorPedidos := ContadorPedidos + 1.
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

Negocio removeSelector: #guardarPedido: ifAbsent: []!

Object subclass: #Pedido
	instanceVariableNames: 'Numero Mercaderias Fecha Hora PrecioTotal Valido'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

Object subclass: #Pedido
	instanceVariableNames: 'Numero Mercaderias Fecha Hora PrecioTotal Valido'
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

!Pedido methodsFor!
validar: elMenu
	Valido := true.
	1 to: Mercaderias size
		do: 
			[:i |
			| unId unaMercaderia unPrecio |
			unId := Mercaderias at: i.
			unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [Valido := false].
			unPrecio := unaMercaderia verPrecio.
			PrecioTotal := unPrecio + PrecioTotal].
	^Valido! !
!Pedido categoriesFor: #validar:!public! !

!Pedido methodsFor!
iniciarPedidoNumero: numero Mercaderias: mercaderias
	Numero := numero.
	Mercaderias := mercaderias.
	Fecha := Date today.
	Hora := Time now.
	PrecioTotal := 0.
	Valido :=false.! !
!Pedido categoriesFor: #iniciarPedidoNumero:Mercaderias:!public! !

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido inspect.!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido inspect.!

!Pedido methodsFor!
validar: elMenu
	Valido := true.
	1 to: Mercaderias size
		do: 
			[:i |
			| unId |
			unId := Mercaderias at: i.
			elMenu detect: [:each | each verId = unId] ifNone: [Valido := false]].
	^Valido! !
!Pedido categoriesFor: #validar:!public! !

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido inspect.!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido
		ifTrue: 
			[1 to: Mercaderias size
				do: 
					[:i |
					| unId unaMercaderia unPrecio |
					unId := Mercaderias at: i.
					unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
					unPrecio := unaMercaderia verPrecio.
					PrecioTotal := unPrecio + PrecioTotal]].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido
		ifTrue: 
			[1 to: Mercaderias size
				do: 
					[:i |
					| unId unaMercaderia unPrecio |
					unId := Mercaderias at: i.
					unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
					unPrecio := unaMercaderia verPrecio.
					PrecioTotal := unPrecio + PrecioTotal]]
		ifFalse: 
			[Transcript show: 'ERROR: no se puede calcular el precio total del pedido porque no fue validado'].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido
		ifTrue: 
			[1 to: Mercaderias size
				do: 
					[:i |
					| unId unaMercaderia unPrecio |
					unId := Mercaderias at: i.
					unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
					unPrecio := unaMercaderia verPrecio.
					PrecioTotal := unPrecio + PrecioTotal]]
		ifFalse: 
			[Transcript show.
			Transcript show: 'ERROR: no se puede calcular el precio total del pedido porque no fue validado'].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

!Negocio methodsFor!
cobrarPedido: unPedido
	0 = unPedido verPrecioTotal
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifTrue: 
			[Transcript show.
			Transcript show: 'Error: no se puede cobrar el pedidio porque su valor total es $0']
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido
		ifTrue: 
			[1 to: Mercaderias size
				do: 
					[:i |
					| unId unaMercaderia unPrecio |
					unId := Mercaderias at: i.
					unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
					unPrecio := unaMercaderia verPrecio.
					PrecioTotal := unPrecio + PrecioTotal]]
		ifFalse: 
			[Transcript show.
			Transcript
				show: 'ERROR: no se puede calcular el precio total del pedido porque no fue validado';
				cr].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido
		ifTrue: 
			[1 to: Mercaderias size
				do: 
					[:i |
					| unId unaMercaderia unPrecio |
					unId := Mercaderias at: i.
					unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
					unPrecio := unaMercaderia verPrecio.
					PrecioTotal := unPrecio + PrecioTotal]]
		ifFalse: 
			[Transcript show.
			Transcript
				show: 'Error: no se puede calcular el precio total del pedido porque no fue validado';
				cr].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifTrue: 
			[Transcript show.
			Transcript
				show: 'Error: no se puede cobrar el pedidio porque su valor total es $0';
				cr]
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

 | questionText |
aNewAnimal := 'Perro'.
anOldAnimal := 'Gato'.

       [questionText isNil or: [questionText isEmpty]] whileTrue: [

               questionText := Prompter prompt: ('Now, please enter a question that will answer Yes for ',

                       aNewAnimal displayString,

                       ' and No for ',

                       anOldAnimal displayString)

                       caption: 'Now, so I can learn about ', aNewAnimal displayString ].
questionText inspect!

 | questionText |
aNewAnimal := 'Perro'.
anOldAnimal := 'Gato'.

       [questionText isNil or: [questionText isEmpty]] whileTrue: [

               questionText := Prompter prompt: ('Now, please enter a question that will answer Yes for ',

                       aNewAnimal displayString,

                       ' and No for ',

                       anOldAnimal displayString)

                       caption: 'Now, so I can learn about ', aNewAnimal displayString ].
questionText inspect!

 | questionText |
aNewAnimal := 'Perro'.
anOldAnimal := 'Gato'.

       [questionText isNil or: [questionText isEmpty]] whileTrue: [

               questionText := Prompter prompt: ('Now, please enter a question that will answer Yes for ',

                       aNewAnimal displayString,

                       ' and No for ',

                       anOldAnimal displayString)

                       caption: 'Now, so I can learn about ', aNewAnimal displayString ].

questionText inspect.!

 | questionText |
aNewAnimal := 'Perro'.
anOldAnimal := 'Gato'.

       [questionText isNil or: [questionText isEmpty]] whileTrue: [

               questionText := Prompter prompt: ('Now, please enter a question that will answer Yes for ',

                       aNewAnimal displayString,

                       ' and No for ',

                       anOldAnimal displayString)

                       caption: 'Now, so I can learn about ', aNewAnimal displayString ].

questionText inspect.!

 | questionText |
aNewAnimal := 'Perro'.
anOldAnimal := 'Gato'.

       [questionText isNil or: [questionText isEmpty]] whileTrue: [

               questionText := Prompter prompt: ('Now, please enter a question that will answer Yes for ',

                       aNewAnimal displayString,

                       ' and No for ',

                       anOldAnimal displayString)

                       caption: 'Now, so I can learn about ', aNewAnimal displayString ].

questionText inspect.!

 | questionText |
aNewAnimal := 'Perro'.
anOldAnimal := 'Gato'.

       [questionText isNil or: [questionText isEmpty]] whileTrue: [

               questionText := Prompter prompt: ('Now, please enter a question that will answer Yes for ',

                       aNewAnimal displayString,

                       ' and No for ',

                       anOldAnimal displayString)

                       caption: 'Now, so I can learn about ', aNewAnimal displayString ].

questionText inspect.

Prompter displayOn: 'Sergio'.!

Prompter displayOn: 'Sergio'.!

Prompter displayString.!

Prompter displayString.!

Prompter printOn: 'sergo'!

MessageBox notify: '��Es una prueba nada más'!

MessageBox notify: '�Es una prueba nada más'!

MessageBox notify: 'Es una prueba nada más'!

MessageBubble notify:'Error'!


!

MessageBubble notify:'Error'!

MessageBox confirm: 'Esta seguro?'!

MessageBox confirm: 'Esta seguro?'!

seguro := MessageBox confirm: 'Esta seguro?'.
seguro inspect!

seguro inspect!

seguro := MessageBox confirm: 'Esta seguro?'.
seguro inspect!

seguro := MessageBox confirm: 'Esta seguro?'.
seguro inspect.
MessageBox notify: ('Tu respuesta es: ', seguro) printString.!

seguro := MessageBox confirm: 'Esta seguro?'.
MessageBox notify: ('Tu respuesta es: ', seguro printString).!

 num :=1.
MessageBox  notify:  ('el valor del numero es ', num printString)!

 num :=1.
MessageBox  notify:  ('el valor del numero es ', num printString) caption: 'Aviso'!

num := Prompter prompt: 'Ingrese un número' caption: 'Ingreso de dato'.
MessageBox notify: 'el valor del numero es ' , num printString caption: 'Aviso'.
confirmado := MessageBox confirm: 'Esta seguro que el númro es ' , num printString
			caption: 'Confirme el dato'.
mensaje := ''.
confirmado ifTrue: [mensaje := 'Confimado'] ifFalse: [mensaje := 'No se confirmó'].
MessageBox notify: mensaje!

num := Prompter prompt: 'Ingrese un número' caption: 'Ingreso de dato'.
MessageBox notify: 'el valor del numero es ' , num printString caption: 'Aviso'.
confirmado := MessageBox confirm: 'Esta seguro que el númro es ' , num printString
			caption: 'Confirme el dato'.
mensaje := ''.
confirmado ifTrue: [mensaje := 'Confimado'] ifFalse: [mensaje := 'No se confirmó'].
MessageBubble notify: mensaje!

num := Prompter prompt: 'Ingrese un número' caption: 'Ingreso de dato'.
MessageBox notify: 'el valor del numero es ' , num printString caption: 'Aviso'.
confirmado := MessageBox confirm: 'Esta seguro que el númro es ' , num printString
			caption: 'Confirme el dato'.
mensaje := ''.
confirmado ifTrue: [mensaje := 'Confimado'] ifFalse: [mensaje := 'No se confirmó'].
MessageBubble notify: mensaje caption: 'Aviso'.!

num := Prompter prompt: 'Ingrese un número' caption: 'Ingreso de dato'.
MessageBox notify: 'el valor del numero es ' , num printString caption: 'Aviso'.
confirmado := MessageBox confirm: 'Esta seguro que el númro es ' , num printString
			caption: 'Confirme el dato'.
mensaje := ''.
confirmado ifTrue: [mensaje := 'Confimado'] ifFalse: [mensaje := 'No se confirmó'].
MessageBubble at: 5 put: mensaje.!

num := Prompter prompt: 'Ingrese un número' caption: 'Ingreso de dato'.
MessageBox notify: 'el valor del numero es ' , num printString caption: 'Aviso'.
confirmado := MessageBox confirm: 'Esta seguro que el númro es ' , num printString
			caption: 'Confirme el dato'.
mensaje := ''.
confirmado ifTrue: [mensaje := 'Confimado'] ifFalse: [mensaje := 'No se confirmó'].
MessageBubble notify: mensaje caption: 'Ojo'!

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifTrue: 
			[Transcript show.
			MessageBox notify: 'Error: no se puede cobrar el pedidio porque su valor total es $0']
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido
		ifTrue: 
			[1 to: Mercaderias size
				do: 
					[:i |
					| unId unaMercaderia unPrecio |
					unId := Mercaderias at: i.
					unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
					unPrecio := unaMercaderia verPrecio.
					PrecioTotal := unPrecio + PrecioTotal]]
		ifFalse: 
			[MessageBox notify: 'Error: no se puede calcular el precio total del pedido porque no fue validado'].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifTrue: [MessageBox notify: 'Error: no se puede cobrar el pedidio porque su valor total es $0']
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifTrue: [MessageBox notify: 'Error: no se puede cobrar el pedidio porque su valor total es $0']
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifTrue: [MessageBox notify: 'Error: no se puede cobrar el pedidio porque su valor total es $0']
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect.	!

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifTrue: 
			[MessageBox notify: 'Error: no se puede cobrar el pedidio porque su valor total es $0'
				caption: 'Aviso del pedido']
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

!Negocio methodsFor!
cobrarPedido: unPedido
	unPedido verPrecioTotal = 0
		ifTrue: 
			[MessageBox notify: 'Error: no se puede cobrar el pedidio porque su valor total es $0'
				caption: 'Aviso del negocio']
		ifFalse: 
			[Pedidos add: unPedido.
			Recaudacion := Recaudacion + unPedido verPrecioTotal.
			ContadorPedidos := ContadorPedidos + 1].
	^Pedidos! !
!Negocio categoriesFor: #cobrarPedido:!public! !

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido
		ifTrue: 
			[1 to: Mercaderias size
				do: 
					[:i |
					| unId unaMercaderia unPrecio |
					unId := Mercaderias at: i.
					unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
					unPrecio := unaMercaderia verPrecio.
					PrecioTotal := unPrecio + PrecioTotal]]
		ifFalse: 
			[MessageBox notify: 'Error: no se puede calcular el precio total del pedido porque no fue validado'
				caption: 'Aviso del pedido'].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 7.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect.		!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.

"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := OrderedCollection new.
mercaderias add: 1.
mercaderias add: 2.
mercaderias add: 3.
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect.	!

!Pedido methodsFor!
calcularPrecioTotal: elMenu
	Valido
		ifTrue: 
			[1 to: Mercaderias size
				do: 
					[:i |
					| unId unaMercaderia unPrecio |
					unId := Mercaderias at: i.
					unaMercaderia := elMenu detect: [:each | each verId = unId] ifNone: [^nil].
					unPrecio := unaMercaderia verPrecio.
					PrecioTotal := unPrecio + PrecioTotal]]
		ifFalse: 
			[MessageBox notify: 'Error: no se puede calcular el precio total del pedido porque no fue validado'
				caption: 'Aviso del pedido'].
	^PrecioTotal! !
!Pedido categoriesFor: #calcularPrecioTotal:!public! !


str := 'Sergio','Zarza'.
MessageBox notify: str.!

str := 'Sergio', '\n','Zarza'.
MessageBox notify: str.!

MessageBox notify: '♪'!

ercaderiasIngresadas := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
ista := mercaderias subString.!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
lista := mercaderias subString.
lista inspect!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
mercaderias inspect!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
mercaderias inspect!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
lista := mercaderias subString.
lista inspect!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
mercaderias split: lista .
lista inspect!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
lista := ''.
lista split: mercaderias.
lista inspect!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
lista := mercaderias subStrings.
lista inspect!

mercaderias := Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido'.
lista := mercaderias subStrings.
lista inspect!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
mercaderias inspect .!

listaIds := OrderedCollection new.
1 to mercaderias size do: [:i|listaIds add:  ((mercaderias at: i) asNumber)].!

listaIds := OrderedCollection new.
1 to: mercaderias size do: [:i|listaIds add:  ((mercaderias at: i) asNumber)].!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
listaIds := OrderedCollection new.
1 to: mercaderias size do: [:i|listaIds add:  ((mercaderias at: i) asNumber)].
listaIds inspect.!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
listaIds := OrderedCollection new.
1 to: mercaderias size do: [:i|listaIds add:  ((mercaderias at: i) asNumber)].
listaIds inspect!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
listaIds := OrderedCollection new.
1 to: mercaderias size do: [:i|listaIds add:  ((mercaderias at: i) asNumber ifNil: [^0] )].
listaIds inspect.!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
listaIds := OrderedCollection new.
1 to: mercaderias size do: [:i | listaIds add: (mercaderias at: i) asNumber].
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: listaIds.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

miNegocio agregarMercaderia: mercaderia1.!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
listaIds := OrderedCollection new.
1 to: mercaderias size do: [:i | listaIds add: (mercaderias at: i) asNumber].
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: listaIds.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do:[:i|(mercaderias at:i) isInteger isifFalse: [entradaValida := false]].
entradaValida inspect.!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do:[:i|(mercaderias at:i) isInteger isfFalse: [entradaValida := false]].
entradaValida inspect.!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do:[:i|(mercaderias at:i) isInteger isFalse: [entradaValida := false]].
entradaValida inspect.!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do: [:i | (mercaderias at: i) isInteger ifFalse: [entradaValida := false]].
entradaValida inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
listaIds := OrderedCollection new.
"entradaValida := true.
1 to: mercaderias size do: [:i | (mercaderias at: i) isInteger ifFalse: [entradaValida := false]].
entradaValida inspect"
1 to: mercaderias size do: [:i | listaIds add: (mercaderias at: i) asInteger].
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: listaIds.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
"mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'."
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: mercaderia1.
miNegocio agregarMercaderia: mercaderia2.
miNegocio agregarMercaderia: mercaderia3.
miNegocio agregarMercaderia: mercaderia4.
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
"listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do: [:i | (mercaderias at: i) isInteger ifFalse: [entradaValida := false]].
entradaValida inspect
1 to: mercaderias size do: [:i | listaIds add: (mercaderias at: i) asNumber]."
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
mercaderias inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
"listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do: [:i | (mercaderias at: i) isInteger ifFalse: [entradaValida := false]].
entradaValida inspect
1 to: mercaderias size do: [:i | listaIds add: (mercaderias at: i) asNumber]."
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

miNegocio agregarMercaderia: m1.!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
"listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do: [:i | (mercaderias at: i) isInteger ifFalse: [entradaValida := false]].
entradaValida inspect
1 to: mercaderias size do: [:i | listaIds add: (mercaderias at: i) asNumber]."
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
"listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do: [:i | (mercaderias at: i) isInteger ifFalse: [entradaValida := false]].
entradaValida inspect
1 to: mercaderias size do: [:i | listaIds add: (mercaderias at: i) asNumber]."
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
"listaIds := OrderedCollection new.
entradaValida := true.
1 to: mercaderias size do: [:i | (mercaderias at: i) isInteger ifFalse: [entradaValida := false]].
entradaValida inspect
1 to: mercaderias size do: [:i | listaIds add: (mercaderias at: i) asNumber]."
unPedido := Pedido crearPedidoNumero: 1 Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido') subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
unPedido calcularPrecioTotal: miNegocio verMenu.
miNegocio cobrarPedido: unPedido.
miNegocio inspect!

!Negocio methodsFor!
iniciarNegocioNombre: nombre Direccion: direccion Telefono: telefono
	Nombre := nombre.
	Direccion := direccion.
	Telefono := telefono.
	Menu := OrderedCollection new.
	Recaudacion := 0.
	ContadorPedidos := 1.
	Pedidos := OrderedCollection new! !
!Negocio categoriesFor: #iniciarNegocioNombre:Direccion:Telefono:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido
	ifFalse: [MessageBox notify: 'Error: Las maercaderias no son correctas' caption: 'Error en tu pedido']
	ifTrue: 
		[unPedido calcularPrecioTotal: miNegocio verMenu.
		miNegocio cobrarPedido: unPedido].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido
	ifFalse: [MessageBox notify: 'Error: Las maercaderias no son correctas' caption: 'Error en tu pedido']
	ifTrue: 
		[unPedido calcularPrecioTotal: miNegocio verMenu.
		miNegocio cobrarPedido: unPedido].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido
	ifFalse: [MessageBox notify: 'Las maercaderias no son correctas' caption: 'Error en tu pedido']
	ifTrue: 
		[unPedido calcularPrecioTotal: miNegocio verMenu.
		miNegocio cobrarPedido: unPedido].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido
	ifFalse: 
		[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
			caption: 'Error en tu pedido']
	ifTrue: 
		[unPedido calcularPrecioTotal: miNegocio verMenu.
		miNegocio cobrarPedido: unPedido].
miNegocio inspect!

		miNegocio cobrarPedido: unPedido.!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido
	ifFalse: 
		[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
			caption: 'Error en tu pedido']
	ifTrue: 
		[unPedido calcularPrecioTotal: miNegocio verMenu.
		miNegocio cobrarPedido: unPedido.
		MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso'].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido
	ifFalse: 
		[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
			caption: 'Error en tu pedido']
	ifTrue: 
		[unPedido calcularPrecioTotal: miNegocio verMenu.
		miNegocio cobrarPedido: unPedido.
		MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso'].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido
	ifFalse: 
		[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
			caption: 'Error en tu pedido']
	ifTrue: 
		[unPedido calcularPrecioTotal: miNegocio verMenu.
		miNegocio cobrarPedido: unPedido.
		MessageBubble notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso'].
miNegocio inspect!

mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Tomar un pedido"
mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
			subStrings.
unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
valido := unPedido validar: miNegocio verMenu.
valido
	ifFalse: 
		[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
			caption: 'Error en tu pedido']
	ifTrue: 
		[unPedido calcularPrecioTotal: miNegocio verMenu.
		miNegocio cobrarPedido: unPedido.
		MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso'].
miNegocio inspect!

| continuar |
"Opciones del negocio"
continuar := true.
continuar whileTrue: 
		[| opcion |
		opcion := Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver estadísticas 3.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = 3 ifTrue: [continuar = false]]!


| continuar |
"Opciones del negocio"
continuar := true.
continuar whileTrue: 
		[| opcion |
		opcion := Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = 3 ifTrue: [continuar = false].].!

| continuar |
"Opciones del negocio"
continuar := true.
continuar whileTrue: 
		[| opcion |
		opcion := Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = 3 ifTrue: [continuar = false]].!

| continuar |
"Opciones del negocio"
continuar := true.
continuar whileTrue: 
		[| opcion |
		opcion := Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = 3 ifTrue: [continuar = false]].!


| continuar |
"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = 3 ifTrue: [continuar = false]].!

"16:10:50, 06 July 2021: Image saved"!

"16:10:56, 06 July 2021: Image saved"!

"16:11:07, 06 July 2021: Dolphin Smalltalk Professional started"!

| continuar |
"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '3' ifTrue: [continuar = false]].!

"16:12:05, 06 July 2021: Dolphin Smalltalk Professional started"!

| continuar |
"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion :=
			Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Salir'
			caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		(opcion = '3') ifTrue: [continuar = false]].!

"16:14:26, 06 July 2021: Image saved"!

"16:14:32, 06 July 2021: Dolphin Smalltalk Professional started"!

| continuar |
"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion :=
			(Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Salir'
			caption: 'Opciones del negocio ' , miNegocio verNombre printString) asNumber.
		(opcion = 3) ifTrue: [continuar = false]].!

| continuar |
"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion :=
			(Prompter prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Salir'
			caption: 'Opciones del negocio ' , miNegocio verNombre printString).
		opcion = '3' ifTrue: [continuar := false]].!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox notify: 'El total de pedidos es: ' , pedidos size printString , 'Los pedidos son:'
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox
					notify: 'El total de pedidos es: ' , pedidos size printString , #(#lf) , ' Los pedidos son:'
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox
					notify: 'El total de pedidos es: ' , pedidos size printString , #('Sergio') , ' Los pedidos son:'
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox
					notify: #('El total de pedidos es: ' #, #pedidos #size #printString #, #lf #, ' Los pedidos son:')
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox
					notify: #('El total de pedidos es: ', pedidos size printString, #lf, ' Los pedidos son:')
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox notify: 'El total de pedidos es: ' , pedidos size printString , #lf , ' Los pedidos son:'
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox notify: ('El total de pedidos es: ' , pedidos size printString , #tab , ' Los pedidos son:')
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox notify: ('El total de pedidos es: ' , pedidos size printString , #(#lf) , ' Los pedidos son:')
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				MessageBox
					notify: 'El total de pedidos es: ' , pedidos size printString , Character cr , ' Los pedidos son:'
					caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				mensaje := 'El total de pedidos es:' , pedidos size printString , Character cr.
				mensaje := mensaje , 'Los últimos pedidos son:' , Character cr.
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				n := pedidos size.
				mensaje := 'El total de pedidos es:' , n printString , Character cr.
				ped := pedidos at: n.
				mensaje := mensaje , 'El último pedido es:' , Character cr.
				mensaje := mensaje , 'PedidoId: ' , ped verId , '  Hs: ' , ped verHora , '  $' , ped verPrecioTotal.
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				pedidos := miNegocio verPedidos.
				n := pedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := pedidos at: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'PedidoId: ' , ped verId , '  Hs: ' , ped verHora , '  $' , ped verPrecioTotal]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'PedidoId: ' , ped verId , '  Hs: ' , ped verHora , '  $' , ped verPrecioTotal]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'PedidoId: ' , ped verId , '  Hs: ' , ped verHora , '  $' , ped verPrecioTotal]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'PedidoId: ' , ped verId , '  Hs: ' , ped verHora , '  $' , ped verPrecioTotal]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'PedidoId: ' , ped verId , '  Hs: ' , ped verHora , '  $' , ped verPrecioTotal]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

						ped := miNegocio buscarPedidoPorNumero: n.!

						ped := miNegocio buscarPedidoPorNumero: n.!

mensaje := mensaje , 'PedidoId: ' , ped verId , '  Hs: ' , ped verHora , '  $' , ped verPrecioTotal!

						ped := miNegocio buscarPedidoPorNumero: n.!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'PedidoId: ' , ped verId printString , '  hs: ' , ped verHora printString
									, '  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las maercaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox notify: 'Tu pedido fue cobrado' caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  hs: ' , ped verHora printString
									, '  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  hs: ' , ped verHora printString
									, '  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  hs: ' , ped verHora , '  $'
									, ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript
					cr;
					cr.
				Transcript show: 'Estadística de día: ' , Date today].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  hs: ' , ped verHora printString
									, '  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript
					cr;
					cr.
				Transcript show: 'Estadística de día: ' , Date today].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript
					cr;
					cr.
				Transcript show: 'Estadística de día: ' , Date today].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript show: 'Estadística de día: ' , Date today printString.].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion;
					cr].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion;
					cr].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				"pedidosM600 inspect."
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				"miNegocio verOcurrenciasMercaderia inspect"].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

"18:07:59, 06 July 2021: Image saved"!

"18:08:03, 06 July 2021: Image saved"!

"18:09:15, 06 July 2021: Dolphin Smalltalk Professional started"!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect
				"miNegocio verOcurrenciasMercaderia inspect"].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect
				"miNegocio verOcurrenciasMercaderia inspect"].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

"18:18:22, 06 July 2021: Image saved"!

"18:18:26, 06 July 2021: Image saved"!

"18:29:10, 06 July 2021: Dolphin Smalltalk Professional started"!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^diccionario! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

"18:37:37, 06 July 2021: Image saved"!

"18:37:42, 06 July 2021: Image saved"!

"18:42:57, 06 July 2021: Dolphin Smalltalk Professional started"!

"18:48:38, 06 July 2021: Dolphin Smalltalk Professional started"!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.

"Collect obtener las categorias de todas las comidas"
negocio verCategoriasComidas inspect.!

"18:53:33, 06 July 2021: Dolphin Smalltalk Professional started"!

"-----------------------Bucle para crear negocio y agregarle mercaderias al menu------------------------
| tipo |
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect.

------------------------------------------------------------------------------------------------------------------"
"Creacion de mercaderias"
negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio guardarPedido: pedido1.
negocio guardarPedido: pedido2.
negocio guardarPedido: pedido3.

negocio inspect.!

num := Prompter prompt: 'Ingrese un número' caption: 'Ingreso de dato'.
MessageBox notify: 'el valor del numero es ' , num printString caption: 'Aviso'.
confirmado := MessageBox confirm: 'Esta seguro que el númro es ' , num printString
			caption: 'Confirme el dato'.
mensaje := ''.
confirmado ifTrue: [mensaje := 'Confimado'] ifFalse: [mensaje := 'No se confirmó'].
MessageBubble notify: mensaje caption: 'Ojo'!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio cobrarPedido: pedido1.
negocio cobrarPedido: pedido2.
negocio cobrarPedido: pedido3.

negocio inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio cobrarPedido: pedido1.
negocio cobrarPedido: pedido2.
negocio cobrarPedido: pedido3.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.
!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.
negocio inspect.!

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio cobrarPedido: pedido1.
negocio cobrarPedido: pedido2.
negocio cobrarPedido: pedido3.

negocio inspect.!

"19:10:47, 06 July 2021: Image saved"!

"19:10:51, 06 July 2021: Dolphin Smalltalk Professional started"!

"19:39:28, 06 July 2021: Dolphin Smalltalk Professional started"!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

"19:13:22, 07 July 2021: Dolphin Smalltalk Professional started"!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido

1 to unPedido size! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido

1 to: unPedido size! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido

1 to: unPedido size
do:[:i|].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido

1 to: unPedido size
do:[:i|].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido

1 to: unPedido size
do:[:i| (unPedido at: i )            ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido

1 to: unPedido size
do:[:i| (unPedido at: i )            ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido

1 to: unPedido size
do:[:i|             ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: unPedido size
do:[:i|             ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: unPedido size
do:[:i|             ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i|             ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i|             ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| (unPedido verMercaderias at: i)            ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| (unPedido verMercaderias at: i)            ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| Menu             ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| Menu             ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| Menu detect:[:id| ]            ].




"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| Menu detect:[:id| ]            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| Menu detect:[:id| ]            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ]            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m|
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ]            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m|
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ]            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
            ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
    listaMercaderias add:m        ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
    listaMercaderias add:m.        ].



"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias) at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

negocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.
mercaderia1 := Comida
			crearComidaId: 1
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
mercaderia2 := Bebida
			crearBebidaId: 2
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
mercaderia3 := Comida
			crearComidaId: 3
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
mercaderia4 := Bebida
			crearBebidaId: 4
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros:2000.

"Agregar mercaderias al menu del negocio"
negocio agregarMercaderia: mercaderia1.
negocio agregarMercaderia: mercaderia2.
negocio agregarMercaderia: mercaderia3.
negocio agregarMercaderia: mercaderia4.

"Seleccionar mercaderias de menu y crear pedido"
lista := OrderedCollection new.
lista2 := OrderedCollection new.
lista3 := OrderedCollection new.
lista add: mercaderia1.
lista add: mercaderia2.
lista add: mercaderia3.
lista2 add: mercaderia2.
lista2 add: mercaderia4.
lista3 add: mercaderia1.
lista3 add: mercaderia2.
pedido1 := Pedido crearPedidoNumero: 1 Mercaderias: lista.
pedido2 := Pedido crearPedidoNumero: 2 Mercaderias: lista2.
pedido3 := Pedido crearPedidoNumero: 3 Mercaderias: lista3.
negocio cobrarPedido: pedido1.
negocio cobrarPedido: pedido2.
negocio cobrarPedido: pedido3.

negocio inspect.

"Collect obtener las categorias de todas las comidas"
negocio verCategoriasComidas inspect.
!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						miNegocio obtenerMercaderiasPorPedido: unPedido.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						miNegocio obtenerMercaderiasPorPedido: unPedido inspect.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						miNegocio obtenerMercaderiasPorPedido: unPedido inspect.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias  at:i) ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias  at:i) ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias:= OrderedCollection new.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (unPedido verMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (unPedido verMercaderias )at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias )at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias )at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias)at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias)at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = listaMercaderias at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = listaMercaderias at:i ].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						miNegocio obtenerMercaderiasPorPedido: unPedido inspect.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						miNegocio obtenerMercaderiasPorPedido: unPedido inspect.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"miNegocio obtenerMercaderiasPorPedido: unPedido inspect."
						unPedido verMercaderias inspect.
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

"^listaMercaderias."
^unPedido.

"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias listaFinal|
listaMercaderias :=unPedido.
listaFinal :=listaMercaderias asOrderedCollection.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias listaFinal|
listaMercaderias :=unPedido.
listaFinal :=listaMercaderias asOrderedCollection.
"unPedido verMercaderias=[1, 2, 3]"
"Menu=mercaderia1 mercaderia2"
1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias listaFinal|
listaMercaderias :=unPedido.
listaFinal :=listaMercaderias asOrderedCollection.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias listaFinal|
listaMercaderias :=unPedido verMercaderias .
listaFinal :=listaMercaderias asOrderedCollection.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias listaFinal|
listaMercaderias :=unPedido verMercaderias.
listaFinal :=listaMercaderias asOrderedCollection.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias listaFinal|
listaMercaderias :=unPedido verMercaderias.
listaFinal :=listaMercaderias asOrderedCollection.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias listaFinal|
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias listaFinal|
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias|
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)].
    listaMercaderias add:m.        ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias itemMercaderia |
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)]
    listaMercaderias at:i put:itemMercaderia .       ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias itemMercaderia |
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m:=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)]
    listaMercaderias at:i put:itemMercaderia .       ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias |
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m :=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)]
    listaMercaderias at:i put: m .       ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias |
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m :=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)]
    listaMercaderias at:i put: m. ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias |
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m :=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)]
    listaMercaderias at:1 put: m. ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias |
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m :=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)]
    listaMercaderias at:i put: m. ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias |
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m :=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i)]
    listaMercaderias at:i put: m. ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido:unPedido
|m listaMercaderias indice |
listaMercaderias :=unPedido verMercaderias.

1 to: (listaMercaderias) size
do:[:i| m :=Menu detect:[:mercaderia | mercaderia verId = (listaMercaderias at:i).

 listaMercaderias at:i put: m.
]
    ].

^listaMercaderias.


"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							listaMercaderias at: i put: m]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							listaMercaderias at: i put: m]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							listaMercaderias at: i put: m]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias  |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							listaMercaderias at: i put: m]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias  |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							listaMercaderias at: i put: m]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias  |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							listaMercaderias at: i put: m]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias  |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)]

listaMercaderias at: i put: m
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)]

listaMercaderias at: i put: m
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i).
indice:=i]

listaMercaderias at: i put: m
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i).
indice:=i]

listaMercaderias at: indice put: m
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i).
indice:=i]

listaMercaderias at: indice put: m
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i).
indice:=i]

listaMercaderias at: indice put: m
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu
						detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i] listaMercaderias
						at: indice
						put: m].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu
						detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i]. listaMercaderias
						at: indice
						put: m].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu
						detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i]. listaMercaderias
						at: indice
						put: m].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu
						detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i] ifNone:[^nil].  listaMercaderias
						at: indice
						put: m].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i]
						ifNone: [^nil].
			listaMercaderias at: indice put: m].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i]
						ifNone: [^nil].
			listaMercaderias at: indice put: m].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i]
						ifNone: [^nil]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i]
						ifNone: [^nil]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias indice |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							indice := i]
						ifNone: [^nil]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: 
							[:mercaderia |
							mercaderia verId = (listaMercaderias at: i).
							]
						ifNone: [^nil]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil]].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].

].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal:= OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].

].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal:= OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].

].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].

].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].

].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
		listaMercaderias add:m
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
		listaMercaderias add:m.
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
		listaFinal add:m.
].
	^listaMercaderias


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
		listaFinal add:m.
].
	^listaFinal


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
		listaFinal add:m.
].
	^listaFinal


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: [:i | m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
		listaFinal add:m.
].
	^listaFinal


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
			listaFinal add: m].
	^listaFinal


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
			listaFinal add: m].
	^listaFinal


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
			listaFinal add: m].
	^listaFinal


	"Pedidos detect: [:item | (item verNumero) = unNumero] ifNone:[^nil]."
	"1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]]."! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
			listaFinal add: m].
	^listaFinal! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
			listaFinal add: m].
	^listaFinal! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos




"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos




"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos




"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: (self obtenerMercaderiasPorPedido: (Pedidos at: i) at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos




"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: (self obtenerMercaderiasPorPedido: (Pedidos at: i))]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos




"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						(miNegocio obtenerMercaderiasPorPedido:unPedido) inspect.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: (self obtenerMercaderiasPorPedido: (Pedidos at: i))]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^diccionario.




"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((self obtenerMercaderiasPorPedido: (Pedidos at: i))at: j )]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^diccionario.




"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((self obtenerMercaderiasPorPedido: (Pedidos at: i)) at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^diccionario




	"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((self obtenerMercaderiasPorPedido: (Pedidos at: i)) at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^diccionario




	"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((self obtenerMercaderiasPorPedido: (Pedidos at: i)) at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom verNombre put: (lista occurrencesOf: nom)].
	^diccionario




	"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((self obtenerMercaderiasPorPedido: (Pedidos at: i)) at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: (nom verNombre) put: (lista occurrencesOf: nom)].
	^diccionario




	"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].

				
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Negocio removeSelector: #actualizarRecaudacion ifAbsent: []!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				Transcript
					show: 'Mercaderias del menú de tipo comida:' , miNegocio verMercaderiaTipo: 'Comida' printString;
					cr.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				miNegocio verMercaderiaTipo: 'Comida'.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				miNegocio verMercaderiaTipo: 'Comida'.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				miNegocio verMercaderiaTipo: 'Comida' inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				( miNegocio verOcurrenciasMercaderia) inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosM600 := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosM600 size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosMayoresA := miNegocio verPedidosMayoresA: 600 inspect.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosMayoresA size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosMayoresA := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosMayoresA size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosMayoresA := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosMayoresA size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect.
				miNegocio ordenarMercaderiasPorMayorPrecio inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

	x notify: 'OrdenarMercaderiasPorPrecio'.
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

	x notify: 'OrdenarMercaderiasPorPrecio'.
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

	x notify: 'OrdenarMercaderiasPorPrecio'.
	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosMayoresA := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosMayoresA size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect.
				miNegocio ordenarMercaderiasPorMayorPrecio inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].


	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

MessageBox notify: '��Es una prueba nada más'. 

	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

MessageBox notify: 'Ordenar mercaderias por mayor precio'. 

	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosMayoresA := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosMayoresA size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect.
				miNegocio ordenarMercaderiasPorMayorPrecio inspect].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

"MessageBox notify: 'Ordenar mercaderias por mayor precio'. "

	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

"MessageBox notify: 'Ordenar mercaderias por mayor precio'. "

	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosMayoresA := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosMayoresA size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect.
				miNegocio ordenarMercaderiasPorMayorPrecio inspect: 'Ordenar por mayor' .
].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

"MessageBox notify: 'Ordenar mercaderias por mayor precio'. "

	^listaOrdenada inspect .! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

"MessageBox notify: 'Ordenar mercaderias por mayor precio'. "

	^listaOrdenada inspect.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosMayoresA := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosMayoresA size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect.
				miNegocio ordenarMercaderiasPorMayorPrecio.
].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect.!

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

	^listaOrdenada inspect.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

!Negocio methodsFor!
ordenarMercaderiasPorMayorPrecio
	| listaOrdenada x |
	listaOrdenada := SortedCollection new sortBlock: [:x :y | x verPrecio >= y verPrecio].
	1 to: Menu size do: [:i | listaOrdenada add: (Menu at: i)].

	^listaOrdenada.! !
!Negocio categoriesFor: #ordenarMercaderiasPorMayorPrecio!public! !

Transcript clear.
miNegocio := Negocio
			crearNegocioNombre: 'FASTFOOD'
			Direccion: 'Av. San martin 1200'
			Telefono: '42569212'.	"Crear negocio"
"Crear mercaderías"
m1 := Comida
			crearComidaId: '1'
			nombre: 'Pizza Mozzarella'
			descripcion: 'Pizza con queso mozzarella al horno'
			precio: 350
			categoria: 'Pizzas'.
m2 := Bebida
			crearBebidaId: '2'
			nombre: 'Cocacola'
			descripcion: 'Botella de cocacola pequeña'
			precio: 120
			Mililitros: 600.
m3 := Comida
			crearComidaId: '3'
			nombre: 'Ravioles de ricota'
			descripcion: 'Ravioles de ricota con salsa filetto'
			precio: 600
			categoria: 'Pastas'.
m4 := Bebida
			crearBebidaId: '4'
			nombre: 'Sprite'
			descripcion: 'Botella grande'
			precio: 200
			Mililitros: 2000.
"Agregar mercaderias al menu del negocio"
miNegocio agregarMercaderia: m1.
miNegocio agregarMercaderia: m2.
miNegocio agregarMercaderia: m3.
miNegocio agregarMercaderia: m4.

"Opciones del negocio"
continuar := true.
[continuar] whileTrue: 
		[| opcion |
		opcion := Prompter
					prompt: 'Elija que quiere hacer: 1.-Tomar pedido, 2.-Ver Pedidos, 3.-Ver Estadísticas, 4.-Salir'
					caption: 'Opciones del negocio ' , miNegocio verNombre printString.
		opcion = '1'
			ifTrue: 
				["Tomar un pedido"
				mercaderias := (Prompter prompt: 'Ingresa los números de mercaderías' caption: 'Ingresa tu pedido')
							subStrings.
				unPedido := Pedido crearPedidoNumero: miNegocio verContadorPedidos Mercaderias: mercaderias.
				valido := unPedido validar: miNegocio verMenu.
				valido
					ifFalse: 
						[MessageBox notify: 'Tu pedido no se realizará, porque las marcaderias no son correctas'
							caption: 'Error en tu pedido']
					ifTrue: 
						[unPedido calcularPrecioTotal: miNegocio verMenu.
						miNegocio cobrarPedido: unPedido.
						"unPedido verMercaderias inspect."
						MessageBox
							notify: 'Detalles del pedido:' , Character cr , 'Nro.:' , unPedido verNumero printString
									, '  Total $' , unPedido verPrecioTotal printString
							caption: 'Pedido exitoso']].
		opcion = '2'
			ifTrue: 
				["Mostrar los pedidos"
				n := miNegocio verPedidos size.
				mensaje := ''.
				n = 0
					ifFalse: 
						[mensaje := 'El total de pedidos es:' , n printString , Character cr.
						ped := miNegocio buscarPedidoPorNumero: n.
						mensaje := mensaje , 'El último pedido es:' , Character cr.
						mensaje := mensaje , 'Nro.: ' , ped verNumero printString , '  a las ' , ped verHora printString
									, 'hs  $' , ped verPrecioTotal printString]
					ifTrue: [mensaje := 'No hay pedidos todavía'].
				MessageBox notify: mensaje caption: 'Viendo los Pedidos'].
		opcion = '3'
			ifTrue: 
				["Mostrar estadísticas"
				Transcript show.
				Transcript
					cr;
					cr.
				Transcript
					show: 'Estadística de día: ' , Date today printString , ' a las ' , Time now printString;
					cr.
				Transcript
					show: 'Contador de Pedidos: ' , miNegocio verContadorPedidos printString;
					cr.
				Transcript
					show: 'Total de pedidos: ' , miNegocio verPedidos size printString;
					cr.
				Transcript
					show: 'Total recaudado $' , miNegocio verRecaudacion printString;
					cr.
				pedidosMayoresA := miNegocio verPedidosMayoresA: 600.
				Transcript
					show: 'Total pedidos mayores a $600: ' , pedidosMayoresA size printString;
					cr.
				(miNegocio verMercaderiaTipo: 'Comida') inspect.
				pedidosM600 inspect.
				miNegocio verOcurrenciasMercaderia inspect.
				miNegocio verCategoriasComidas inspect.
				miNegocio ordenarMercaderiasPorMayorPrecio inspect.
].
		opcion = '4' ifTrue: [continuar := false]].
miNegocio inspect.!

"22:41:24, 07 July 2021: Image saved"!

"22:42:23, 11 July 2021: Dolphin Smalltalk Professional started"!

!Negocio methodsFor!
verPedidosMayoresA: unPrecio
"Select Pedidos mayores a un precio"
|col|
col:= Pedidos select:[:pedido| pedido verPrecioTotal >= unPrecio ].
^col.! !
!Negocio categoriesFor: #verPedidosMayoresA:!public! !

!Negocio methodsFor!
verOcurrenciasMercaderia
	| lista listaSR diccionario |
	lista := OrderedCollection new.	"lista con todas las mercaderias pedidas"
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((self obtenerMercaderiasPorPedido: (Pedidos at: i)) at: j)]].
	listaSR := lista asSet.	"Lista con mercaderias sin repetir"
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom verNombre put: (lista occurrencesOf: nom)].
	^diccionario




	"
lista := OrderedCollection new.	
	1 to: Pedidos size
		do: 
			[:i |
			1 to: (Pedidos at: i) verMercaderias size
				do: [:j | lista add: ((Pedidos at: i) verMercaderias at: j)]].
	listaSR := lista asSet.	
	diccionario := Dictionary new.
	listaSR do: [:nom | diccionario at: nom put: (lista occurrencesOf: nom)].
	^Pedidos"! !
!Negocio categoriesFor: #verOcurrenciasMercaderia!public! !

!Negocio methodsFor!
verMercaderiaTipo:unTipo

|col|
col := Menu reject:[:mercaderia| mercaderia  verTipo ~= unTipo].
^col.! !
!Negocio categoriesFor: #verMercaderiaTipo:!public! !

!Negocio methodsFor!
obtenerMercaderiasPorPedido: unPedido
	| m listaMercaderias listaFinal |
	listaFinal := OrderedCollection new.
	listaMercaderias := unPedido verMercaderias.
	1 to: listaMercaderias size
		do: 
			[:i |
			m := Menu detect: [:mercaderia | mercaderia verId = (listaMercaderias at: i)] ifNone: [^nil].
			listaFinal add: m].
	^listaFinal! !
!Negocio categoriesFor: #obtenerMercaderiasPorPedido:!public! !

| tipo |
nombreNegocio := Prompter prompt: 'Ingrese el nombre del negocio'.
dir := Prompter prompt: 'Ingrese la direccion del negocio'.
tel := Prompter prompt: 'Ingrese el telefono del negocio'.
negocioSim := Negocio
			crearNegocioNombre: nombreNegocio
			Direccion: dir
			Telefono: tel.
[tipo ~= '0'] whileTrue: 
		[tipo := Prompter prompt: 'Ingrese 1 si es bebida, 2 si es comida o 0 para terminar.'.
		tipo = '1'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la bebida'.
				desc := Prompter prompt: 'Ingrese la descripcion la bebida'.
				precio := Prompter prompt: 'Ingrese el precio la bebida'.
				mililitros := Prompter prompt: 'Ingrese los mililitros la bebida'.
				bebida := Bebida
							crearBebidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							Mililitros: mililitros.
				negocioSim agregarMercaderia: bebida].
		tipo = '2'
			ifTrue: 
				[id := Prompter prompt: 'Ingrese el identificador de la mercaderia'.
				nombre := Prompter prompt: 'Ingrese el nombre de la comida'.
				desc := Prompter prompt: 'Ingrese la descripcion de la comida'.
				precio := Prompter prompt: 'Ingrese el precio de la comida'.
				categoria := Prompter prompt: 'Ingrese la categoria de la comida'.
				comida := Comida
							crearComidaId: id
							nombre: nombre
							descripcion: desc
							precio: precio
							categoria: categoria.
				negocioSim agregarMercaderia: comida]].
negocioSim inspect!

"00:14:04, 12 July 2021: Image saved"!

"00:14:08, 12 July 2021: Image saved"!

"00:14:19, 12 July 2021: Dolphin Smalltalk Professional started"!

